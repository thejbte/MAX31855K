

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Oct 17 19:38:16 2019

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.43
    43                           ; Generated 25/07/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1937 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0110                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019C                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019F                     	;# 
   167  020D                     	;# 
   168  0210                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  029F                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0314                     	;# 
   200  0315                     	;# 
   201  0315                     	;# 
   202  0316                     	;# 
   203  0318                     	;# 
   204  0318                     	;# 
   205  0319                     	;# 
   206  031A                     	;# 
   207  031C                     	;# 
   208  031C                     	;# 
   209  031D                     	;# 
   210  031E                     	;# 
   211  0394                     	;# 
   212  0395                     	;# 
   213  0396                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  041C                     	;# 
   218  041D                     	;# 
   219  041E                     	;# 
   220  0791                     	;# 
   221  0792                     	;# 
   222  0793                     	;# 
   223  0794                     	;# 
   224  0795                     	;# 
   225  0798                     	;# 
   226  0799                     	;# 
   227  079A                     	;# 
   228  07A0                     	;# 
   229  07A1                     	;# 
   230  07A2                     	;# 
   231  07A3                     	;# 
   232  07A4                     	;# 
   233  07A5                     	;# 
   234  07A6                     	;# 
   235  07A7                     	;# 
   236  07A8                     	;# 
   237  07A9                     	;# 
   238  07AA                     	;# 
   239  07AB                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0110                     	;# 
   306  0111                     	;# 
   307  0112                     	;# 
   308  0113                     	;# 
   309  0114                     	;# 
   310  0115                     	;# 
   311  0116                     	;# 
   312  0117                     	;# 
   313  0118                     	;# 
   314  0119                     	;# 
   315  011A                     	;# 
   316  011B                     	;# 
   317  011D                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  018F                     	;# 
   321  0190                     	;# 
   322  0191                     	;# 
   323  0191                     	;# 
   324  0192                     	;# 
   325  0193                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0194                     	;# 
   329  0195                     	;# 
   330  0196                     	;# 
   331  0199                     	;# 
   332  019A                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019C                     	;# 
   338  019C                     	;# 
   339  019D                     	;# 
   340  019E                     	;# 
   341  019F                     	;# 
   342  020D                     	;# 
   343  0210                     	;# 
   344  0211                     	;# 
   345  0212                     	;# 
   346  0213                     	;# 
   347  0214                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0291                     	;# 
   353  0291                     	;# 
   354  0292                     	;# 
   355  0293                     	;# 
   356  0294                     	;# 
   357  0295                     	;# 
   358  0295                     	;# 
   359  0296                     	;# 
   360  0298                     	;# 
   361  0298                     	;# 
   362  0299                     	;# 
   363  029A                     	;# 
   364  029B                     	;# 
   365  029C                     	;# 
   366  029C                     	;# 
   367  029D                     	;# 
   368  029E                     	;# 
   369  029F                     	;# 
   370  0311                     	;# 
   371  0311                     	;# 
   372  0312                     	;# 
   373  0313                     	;# 
   374  0314                     	;# 
   375  0315                     	;# 
   376  0315                     	;# 
   377  0316                     	;# 
   378  0318                     	;# 
   379  0318                     	;# 
   380  0319                     	;# 
   381  031A                     	;# 
   382  031C                     	;# 
   383  031C                     	;# 
   384  031D                     	;# 
   385  031E                     	;# 
   386  0394                     	;# 
   387  0395                     	;# 
   388  0396                     	;# 
   389  0415                     	;# 
   390  0416                     	;# 
   391  0417                     	;# 
   392  041C                     	;# 
   393  041D                     	;# 
   394  041E                     	;# 
   395  0791                     	;# 
   396  0792                     	;# 
   397  0793                     	;# 
   398  0794                     	;# 
   399  0795                     	;# 
   400  0798                     	;# 
   401  0799                     	;# 
   402  079A                     	;# 
   403  07A0                     	;# 
   404  07A1                     	;# 
   405  07A2                     	;# 
   406  07A3                     	;# 
   407  07A4                     	;# 
   408  07A5                     	;# 
   409  07A6                     	;# 
   410  07A7                     	;# 
   411  07A8                     	;# 
   412  07A9                     	;# 
   413  07AA                     	;# 
   414  07AB                     	;# 
   415  0FE4                     	;# 
   416  0FE5                     	;# 
   417  0FE6                     	;# 
   418  0FE7                     	;# 
   419  0FE8                     	;# 
   420  0FE9                     	;# 
   421  0FEA                     	;# 
   422  0FEB                     	;# 
   423  0FED                     	;# 
   424  0FEE                     	;# 
   425  0FEF                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0008                     	;# 
   435  0009                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0015                     	;# 
   447  0016                     	;# 
   448  0016                     	;# 
   449  0017                     	;# 
   450  0018                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  008F                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009B                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009E                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  010F                     	;# 
   480  0110                     	;# 
   481  0111                     	;# 
   482  0112                     	;# 
   483  0113                     	;# 
   484  0114                     	;# 
   485  0115                     	;# 
   486  0116                     	;# 
   487  0117                     	;# 
   488  0118                     	;# 
   489  0119                     	;# 
   490  011A                     	;# 
   491  011B                     	;# 
   492  011D                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  018F                     	;# 
   496  0190                     	;# 
   497  0191                     	;# 
   498  0191                     	;# 
   499  0192                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0194                     	;# 
   504  0195                     	;# 
   505  0196                     	;# 
   506  0199                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  020D                     	;# 
   518  0210                     	;# 
   519  0211                     	;# 
   520  0212                     	;# 
   521  0213                     	;# 
   522  0214                     	;# 
   523  0215                     	;# 
   524  0215                     	;# 
   525  0216                     	;# 
   526  0217                     	;# 
   527  0291                     	;# 
   528  0291                     	;# 
   529  0292                     	;# 
   530  0293                     	;# 
   531  0294                     	;# 
   532  0295                     	;# 
   533  0295                     	;# 
   534  0296                     	;# 
   535  0298                     	;# 
   536  0298                     	;# 
   537  0299                     	;# 
   538  029A                     	;# 
   539  029B                     	;# 
   540  029C                     	;# 
   541  029C                     	;# 
   542  029D                     	;# 
   543  029E                     	;# 
   544  029F                     	;# 
   545  0311                     	;# 
   546  0311                     	;# 
   547  0312                     	;# 
   548  0313                     	;# 
   549  0314                     	;# 
   550  0315                     	;# 
   551  0315                     	;# 
   552  0316                     	;# 
   553  0318                     	;# 
   554  0318                     	;# 
   555  0319                     	;# 
   556  031A                     	;# 
   557  031C                     	;# 
   558  031C                     	;# 
   559  031D                     	;# 
   560  031E                     	;# 
   561  0394                     	;# 
   562  0395                     	;# 
   563  0396                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  041C                     	;# 
   568  041D                     	;# 
   569  041E                     	;# 
   570  0791                     	;# 
   571  0792                     	;# 
   572  0793                     	;# 
   573  0794                     	;# 
   574  0795                     	;# 
   575  0798                     	;# 
   576  0799                     	;# 
   577  079A                     	;# 
   578  07A0                     	;# 
   579  07A1                     	;# 
   580  07A2                     	;# 
   581  07A3                     	;# 
   582  07A4                     	;# 
   583  07A5                     	;# 
   584  07A6                     	;# 
   585  07A7                     	;# 
   586  07A8                     	;# 
   587  07A9                     	;# 
   588  07AA                     	;# 
   589  07AB                     	;# 
   590  0FE4                     	;# 
   591  0FE5                     	;# 
   592  0FE6                     	;# 
   593  0FE7                     	;# 
   594  0FE8                     	;# 
   595  0FE9                     	;# 
   596  0FEA                     	;# 
   597  0FEB                     	;# 
   598  0FED                     	;# 
   599  0FEE                     	;# 
   600  0FEF                     	;# 
   601  0000                     	;# 
   602  0001                     	;# 
   603  0002                     	;# 
   604  0003                     	;# 
   605  0004                     	;# 
   606  0005                     	;# 
   607  0006                     	;# 
   608  0007                     	;# 
   609  0008                     	;# 
   610  0009                     	;# 
   611  000A                     	;# 
   612  000B                     	;# 
   613  000C                     	;# 
   614  000D                     	;# 
   615  000E                     	;# 
   616  000F                     	;# 
   617  0010                     	;# 
   618  0011                     	;# 
   619  0012                     	;# 
   620  0013                     	;# 
   621  0015                     	;# 
   622  0016                     	;# 
   623  0016                     	;# 
   624  0017                     	;# 
   625  0018                     	;# 
   626  0019                     	;# 
   627  001A                     	;# 
   628  001B                     	;# 
   629  001C                     	;# 
   630  001E                     	;# 
   631  001F                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  008F                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0093                     	;# 
   640  0095                     	;# 
   641  0096                     	;# 
   642  0097                     	;# 
   643  0098                     	;# 
   644  0099                     	;# 
   645  009A                     	;# 
   646  009B                     	;# 
   647  009B                     	;# 
   648  009C                     	;# 
   649  009D                     	;# 
   650  009E                     	;# 
   651  010C                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  010F                     	;# 
   655  0110                     	;# 
   656  0111                     	;# 
   657  0112                     	;# 
   658  0113                     	;# 
   659  0114                     	;# 
   660  0115                     	;# 
   661  0116                     	;# 
   662  0117                     	;# 
   663  0118                     	;# 
   664  0119                     	;# 
   665  011A                     	;# 
   666  011B                     	;# 
   667  011D                     	;# 
   668  018C                     	;# 
   669  018D                     	;# 
   670  018F                     	;# 
   671  0190                     	;# 
   672  0191                     	;# 
   673  0191                     	;# 
   674  0192                     	;# 
   675  0193                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0194                     	;# 
   679  0195                     	;# 
   680  0196                     	;# 
   681  0199                     	;# 
   682  019A                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019C                     	;# 
   688  019C                     	;# 
   689  019D                     	;# 
   690  019E                     	;# 
   691  019F                     	;# 
   692  020D                     	;# 
   693  0210                     	;# 
   694  0211                     	;# 
   695  0212                     	;# 
   696  0213                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0216                     	;# 
   701  0217                     	;# 
   702  0291                     	;# 
   703  0291                     	;# 
   704  0292                     	;# 
   705  0293                     	;# 
   706  0294                     	;# 
   707  0295                     	;# 
   708  0295                     	;# 
   709  0296                     	;# 
   710  0298                     	;# 
   711  0298                     	;# 
   712  0299                     	;# 
   713  029A                     	;# 
   714  029B                     	;# 
   715  029C                     	;# 
   716  029C                     	;# 
   717  029D                     	;# 
   718  029E                     	;# 
   719  029F                     	;# 
   720  0311                     	;# 
   721  0311                     	;# 
   722  0312                     	;# 
   723  0313                     	;# 
   724  0314                     	;# 
   725  0315                     	;# 
   726  0315                     	;# 
   727  0316                     	;# 
   728  0318                     	;# 
   729  0318                     	;# 
   730  0319                     	;# 
   731  031A                     	;# 
   732  031C                     	;# 
   733  031C                     	;# 
   734  031D                     	;# 
   735  031E                     	;# 
   736  0394                     	;# 
   737  0395                     	;# 
   738  0396                     	;# 
   739  0415                     	;# 
   740  0416                     	;# 
   741  0417                     	;# 
   742  041C                     	;# 
   743  041D                     	;# 
   744  041E                     	;# 
   745  0791                     	;# 
   746  0792                     	;# 
   747  0793                     	;# 
   748  0794                     	;# 
   749  0795                     	;# 
   750  0798                     	;# 
   751  0799                     	;# 
   752  079A                     	;# 
   753  07A0                     	;# 
   754  07A1                     	;# 
   755  07A2                     	;# 
   756  07A3                     	;# 
   757  07A4                     	;# 
   758  07A5                     	;# 
   759  07A6                     	;# 
   760  07A7                     	;# 
   761  07A8                     	;# 
   762  07A9                     	;# 
   763  07AA                     	;# 
   764  07AB                     	;# 
   765  0FE4                     	;# 
   766  0FE5                     	;# 
   767  0FE6                     	;# 
   768  0FE7                     	;# 
   769  0FE8                     	;# 
   770  0FE9                     	;# 
   771  0FEA                     	;# 
   772  0FEB                     	;# 
   773  0FED                     	;# 
   774  0FEE                     	;# 
   775  0FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000D                     	;# 
   790  000E                     	;# 
   791  000F                     	;# 
   792  0010                     	;# 
   793  0011                     	;# 
   794  0012                     	;# 
   795  0013                     	;# 
   796  0015                     	;# 
   797  0016                     	;# 
   798  0016                     	;# 
   799  0017                     	;# 
   800  0018                     	;# 
   801  0019                     	;# 
   802  001A                     	;# 
   803  001B                     	;# 
   804  001C                     	;# 
   805  001E                     	;# 
   806  001F                     	;# 
   807  008C                     	;# 
   808  008D                     	;# 
   809  008E                     	;# 
   810  008F                     	;# 
   811  0090                     	;# 
   812  0091                     	;# 
   813  0092                     	;# 
   814  0093                     	;# 
   815  0095                     	;# 
   816  0096                     	;# 
   817  0097                     	;# 
   818  0098                     	;# 
   819  0099                     	;# 
   820  009A                     	;# 
   821  009B                     	;# 
   822  009B                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009E                     	;# 
   826  010C                     	;# 
   827  010D                     	;# 
   828  010E                     	;# 
   829  010F                     	;# 
   830  0110                     	;# 
   831  0111                     	;# 
   832  0112                     	;# 
   833  0113                     	;# 
   834  0114                     	;# 
   835  0115                     	;# 
   836  0116                     	;# 
   837  0117                     	;# 
   838  0118                     	;# 
   839  0119                     	;# 
   840  011A                     	;# 
   841  011B                     	;# 
   842  011D                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  018F                     	;# 
   846  0190                     	;# 
   847  0191                     	;# 
   848  0191                     	;# 
   849  0192                     	;# 
   850  0193                     	;# 
   851  0193                     	;# 
   852  0193                     	;# 
   853  0194                     	;# 
   854  0195                     	;# 
   855  0196                     	;# 
   856  0199                     	;# 
   857  019A                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019C                     	;# 
   863  019C                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019F                     	;# 
   867  020D                     	;# 
   868  0210                     	;# 
   869  0211                     	;# 
   870  0212                     	;# 
   871  0213                     	;# 
   872  0214                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0216                     	;# 
   876  0217                     	;# 
   877  0291                     	;# 
   878  0291                     	;# 
   879  0292                     	;# 
   880  0293                     	;# 
   881  0294                     	;# 
   882  0295                     	;# 
   883  0295                     	;# 
   884  0296                     	;# 
   885  0298                     	;# 
   886  0298                     	;# 
   887  0299                     	;# 
   888  029A                     	;# 
   889  029B                     	;# 
   890  029C                     	;# 
   891  029C                     	;# 
   892  029D                     	;# 
   893  029E                     	;# 
   894  029F                     	;# 
   895  0311                     	;# 
   896  0311                     	;# 
   897  0312                     	;# 
   898  0313                     	;# 
   899  0314                     	;# 
   900  0315                     	;# 
   901  0315                     	;# 
   902  0316                     	;# 
   903  0318                     	;# 
   904  0318                     	;# 
   905  0319                     	;# 
   906  031A                     	;# 
   907  031C                     	;# 
   908  031C                     	;# 
   909  031D                     	;# 
   910  031E                     	;# 
   911  0394                     	;# 
   912  0395                     	;# 
   913  0396                     	;# 
   914  0415                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  041C                     	;# 
   918  041D                     	;# 
   919  041E                     	;# 
   920  0791                     	;# 
   921  0792                     	;# 
   922  0793                     	;# 
   923  0794                     	;# 
   924  0795                     	;# 
   925  0798                     	;# 
   926  0799                     	;# 
   927  079A                     	;# 
   928  07A0                     	;# 
   929  07A1                     	;# 
   930  07A2                     	;# 
   931  07A3                     	;# 
   932  07A4                     	;# 
   933  07A5                     	;# 
   934  07A6                     	;# 
   935  07A7                     	;# 
   936  07A8                     	;# 
   937  07A9                     	;# 
   938  07AA                     	;# 
   939  07AB                     	;# 
   940  0FE4                     	;# 
   941  0FE5                     	;# 
   942  0FE6                     	;# 
   943  0FE7                     	;# 
   944  0FE8                     	;# 
   945  0FE9                     	;# 
   946  0FEA                     	;# 
   947  0FEB                     	;# 
   948  0FED                     	;# 
   949  0FEE                     	;# 
   950  0FEF                     	;# 
   951                           
   952 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   953  0000                     
   954 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   955  0000                     
   956 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   957  0000                     
   958                           	psect	stringtext1
   959  081C                     __pstringtext1:	
   960  081C                     _dpowers:	
   961  081C  3401               	retlw	1
   962  081D  3400               	retlw	0
   963  081E  340A               	retlw	10
   964  081F  3400               	retlw	0
   965  0820  3464               	retlw	100
   966  0821  3400               	retlw	0
   967  0822  34E8               	retlw	232
   968  0823  3403               	retlw	3
   969  0824  3410               	retlw	16
   970  0825  3427               	retlw	39
   971  0826                     __end_of_dpowers:	
   972                           
   973                           	psect	stringtext2
   974  0826                     __pstringtext2:	
   975  0826                     _hexpowers:	
   976  0826  3401               	retlw	1
   977  0827  3400               	retlw	0
   978  0828  3410               	retlw	16
   979  0829  3400               	retlw	0
   980  082A  3400               	retlw	0
   981  082B  3401               	retlw	1
   982  082C  3400               	retlw	0
   983  082D  3410               	retlw	16
   984  082E                     __end_of_hexpowers:	
   985                           
   986                           	psect	nvBANK0
   987  004B                     __pnvBANK0:	
   988  004B                     _EUSART_ErrorHandler:	
   989  004B                     	ds	2
   990  004D                     _EUSART_OverrunErrorHandler:	
   991  004D                     	ds	2
   992  004F                     _EUSART_FramingErrorHandler:	
   993  004F                     	ds	2
   994  0011                     _PIR1bits	set	17
   995  0095                     _OPTION_REGbits	set	149
   996  008F                     _TRISD	set	143
   997  008E                     _TRISC	set	142
   998  008D                     _TRISB	set	141
   999  008C                     _TRISA	set	140
  1000  0090                     _TRISE	set	144
  1001  0097                     _WDTCON	set	151
  1002  0098                     _OSCTUNE	set	152
  1003  0099                     _OSCCON	set	153
  1004  011D                     _APFCON	set	285
  1005  010E                     _LATC	set	270
  1006  010D                     _LATB	set	269
  1007  010C                     _LATA	set	268
  1008  010F                     _LATD	set	271
  1009  0110                     _LATE	set	272
  1010  0116                     _BORCON	set	278
  1011  010E                     _LATCbits	set	270
  1012  019A                     _TXREG	set	410
  1013  0199                     _RCREG	set	409
  1014  019D                     _RCSTAbits	set	413
  1015  019E                     _TXSTAbits	set	414
  1016  019C                     _SPBRGH	set	412
  1017  019B                     _SPBRGL	set	411
  1018  019E                     _TXSTA	set	414
  1019  019D                     _RCSTA	set	413
  1020  019F                     _BAUDCON	set	415
  1021  018C                     _ANSELA	set	396
  1022  0190                     _ANSELE	set	400
  1023  018D                     _ANSELB	set	397
  1024  018F                     _ANSELD	set	399
  1025  020D                     _WPUB	set	525
  1026  0210                     _WPUE	set	528
  1027  0214                     _SSPSTATbits	set	532
  1028  0211                     _SSPBUF	set	529
  1029  0215                     _SSPCON1bits	set	533
  1030  0212                     _SSPADD	set	530
  1031  0215                     _SSPCON1	set	533
  1032  0214                     _SSPSTAT	set	532
  1033                           
  1034                           	psect	stringtext3
  1035  0800                     __pstringtext3:	
  1036  0800                     STR_4:	
  1037  0800  3430               	retlw	48	;'0'
  1038  0801  3431               	retlw	49	;'1'
  1039  0802  3432               	retlw	50	;'2'
  1040  0803  3433               	retlw	51	;'3'
  1041  0804  3434               	retlw	52	;'4'
  1042  0805  3435               	retlw	53	;'5'
  1043  0806  3436               	retlw	54	;'6'
  1044  0807  3437               	retlw	55	;'7'
  1045  0808  3438               	retlw	56	;'8'
  1046  0809  3439               	retlw	57	;'9'
  1047  080A  3441               	retlw	65	;'A'
  1048  080B  3442               	retlw	66	;'B'
  1049  080C  3443               	retlw	67	;'C'
  1050  080D  3444               	retlw	68	;'D'
  1051  080E  3445               	retlw	69	;'E'
  1052  080F  3446               	retlw	70	;'F'
  1053  0810  3400               	retlw	0
  1054                           
  1055                           	psect	stringtext4
  1056  0811                     __pstringtext4:	
  1057  0811                     STR_3:	
  1058  0811  3420               	retlw	32	;' '
  1059  0812  3454               	retlw	84	;'T'
  1060  0813  3465               	retlw	101	;'e'
  1061  0814  346D               	retlw	109	;'m'
  1062  0815  3470               	retlw	112	;'p'
  1063  0816  3420               	retlw	32	;' '
  1064  0817  3425               	retlw	37	;'%'
  1065  0818  3464               	retlw	100	;'d'
  1066  0819  340D               	retlw	13
  1067  081A  340A               	retlw	10
  1068  081B  3400               	retlw	0
  1069                           
  1070                           	psect	stringtext5
  1071  082E                     __pstringtext5:	
  1072  082E                     STR_2:	
  1073  082E  3425               	retlw	37	;'%'
  1074  082F  3430               	retlw	48	;'0'
  1075  0830  3434               	retlw	52	;'4'
  1076  0831  3458               	retlw	88	;'X'
  1077  0832  3420               	retlw	32	;' '
  1078  0833  3400               	retlw	0
  1079                           
  1080                           	psect	stringtext6
  1081  0834                     __pstringtext6:	
  1082  0834                     STR_1:	
  1083  0834  3425               	retlw	37	;'%'
  1084  0835  3430               	retlw	48	;'0'
  1085  0836  3434               	retlw	52	;'4'
  1086  0837  3458               	retlw	88	;'X'
  1087  0838  3400               	retlw	0
  1088                           
  1089                           	psect	stringtext7
  1090  0000                     __pstringtext7:	
  1091                           
  1092                           ; #config settings
  1093  0000                     
  1094                           	psect	cinit
  1095  07F6                     start_initialization:	
  1096  07F6                     __initialization:	
  1097                           
  1098                           ; Clear objects allocated to BANK0
  1099  07F6  303E               	movlw	low __pbssBANK0
  1100  07F7  0084               	movwf	4
  1101  07F8  3000               	movlw	high __pbssBANK0
  1102  07F9  0085               	movwf	5
  1103  07FA  300D               	movlw	13
  1104  07FB  3183  2396         	fcall	clear_ram0
  1105  07FD                     end_of_initialization:	
  1106                           ;End of C runtime variable initialization code
  1107                           
  1108  07FD                     __end_of__initialization:	
  1109  07FD  0020               	movlb	0
  1110  07FE  3185  2D5A         	ljmp	_main	;jump to C main() function
  1111                           
  1112                           	psect	bssBANK0
  1113  003E                     __pbssBANK0:	
  1114  003E                     _ReadSpi:	
  1115  003E                     	ds	4
  1116  0042                     _eusartRxLastError:	
  1117  0042                     	ds	1
  1118  0043                     _Max31855_Data:	
  1119  0043                     	ds	8
  1120                           
  1121                           	psect	clrtext
  1122  0396                     clear_ram0:	
  1123                           ;	Called with FSR0 containing the base address, and
  1124                           ;	WREG with the size to clear
  1125                           
  1126  0396  0064               	clrwdt	;clear the watchdog before getting into this loop
  1127  0397                     clrloop0:	
  1128  0397  0180               	clrf	0	;clear RAM location pointed to by FSR
  1129  0398  3101               	addfsr 0,1
  1130  0399  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1131  039A  2B97               	goto	clrloop0	;have we reached the end yet?
  1132  039B  3400               	retlw	0	;all done for this memory range, return
  1133                           
  1134                           	psect	cstackCOMMON
  1135  0070                     __pcstackCOMMON:	
  1136  0070                     ?_isdigit:	
  1137  0070                     ?_SYSTEM_Initialize:	
  1138                           ; 1 bit 
  1139                           
  1140  0070                     ?_MAX31855_Init:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_PIN_MANAGER_Initialize:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ??_PIN_MANAGER_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_OSCILLATOR_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ??_OSCILLATOR_Initialize:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_WDT_Initialize:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_WDT_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_EUSART_Initialize:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_EUSART_SetFramingErrorHandler:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_EUSART_SetErrorHandler:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_isdigit:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_SPI_Initialize:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ??_SPI_Initialize:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_SPI_Exchange8bit:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_wrapperpin:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_main:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_MAX31855_ReadData:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_EUSART_Write:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ??_EUSART_Write:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_putch:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?___wmul:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?___awdiv:	
  1207                           ; 2 bytes @ 0x0
  1208                           
  1209  0070                     ?___lwdiv:	
  1210                           ; 2 bytes @ 0x0
  1211                           
  1212  0070                     SPI_Exchange8bit@data:	
  1213                           ; 2 bytes @ 0x0
  1214                           
  1215  0070                     wrapperpin@pin:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     EUSART_Write@txData:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     _isdigit$796:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     MAX31855_Init@SPI_TransferByte:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1228                           ; 2 bytes @ 0x0
  1229                           
  1230  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1231                           ; 2 bytes @ 0x0
  1232                           
  1233  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1234                           ; 2 bytes @ 0x0
  1235                           
  1236  0070                     ___wmul@multiplier:	
  1237                           ; 2 bytes @ 0x0
  1238                           
  1239  0070                     ___awdiv@divisor:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242  0070                     ___lwdiv@divisor:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x0
  1247  0070                     	ds	1
  1248  0071                     ??_SPI_Exchange8bit:	
  1249  0071                     ??_wrapperpin:	
  1250                           ; 1 bytes @ 0x1
  1251                           
  1252  0071                     ??_MAX31855_ReadData:	
  1253                           ; 1 bytes @ 0x1
  1254                           
  1255  0071                     ??_putch:	
  1256                           ; 1 bytes @ 0x1
  1257                           
  1258  0071                     putch@txData:	
  1259                           ; 1 bytes @ 0x1
  1260                           
  1261  0071                     isdigit@c:	
  1262                           ; 1 bytes @ 0x1
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0x1
  1266  0071                     	ds	1
  1267  0072                     ??_SYSTEM_Initialize:	
  1268  0072                     ??_EUSART_Initialize:	
  1269                           ; 1 bytes @ 0x2
  1270                           
  1271  0072                     ??_EUSART_SetFramingErrorHandler:	
  1272                           ; 1 bytes @ 0x2
  1273                           
  1274  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1275                           ; 1 bytes @ 0x2
  1276                           
  1277  0072                     ??_EUSART_SetErrorHandler:	
  1278                           ; 1 bytes @ 0x2
  1279                           
  1280  0072                     MAX31855_Init@SPI_cs_ss:	
  1281                           ; 1 bytes @ 0x2
  1282                           
  1283  0072                     ___wmul@multiplicand:	
  1284                           ; 2 bytes @ 0x2
  1285                           
  1286  0072                     ___awdiv@dividend:	
  1287                           ; 2 bytes @ 0x2
  1288                           
  1289  0072                     ___lwdiv@dividend:	
  1290                           ; 2 bytes @ 0x2
  1291                           
  1292                           
  1293                           ; 2 bytes @ 0x2
  1294  0072                     	ds	2
  1295  0074                     ??_MAX31855_Init:	
  1296  0074                     ??___wmul:	
  1297                           ; 1 bytes @ 0x4
  1298                           
  1299  0074                     ??___awdiv:	
  1300                           ; 1 bytes @ 0x4
  1301                           
  1302  0074                     ??___lwdiv:	
  1303                           ; 1 bytes @ 0x4
  1304                           
  1305  0074                     MAX31855_Init@obj:	
  1306                           ; 1 bytes @ 0x4
  1307                           
  1308  0074                     ___wmul@product:	
  1309                           ; 1 bytes @ 0x4
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0x4
  1313  0074                     	ds	1
  1314  0075                     ___awdiv@counter:	
  1315  0075                     ___lwdiv@quotient:	
  1316                           ; 1 bytes @ 0x5
  1317                           
  1318  0075                     MAX31855_ReadData@spival:	
  1319                           ; 2 bytes @ 0x5
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x5
  1323  0075                     	ds	1
  1324  0076                     ___awdiv@sign:	
  1325                           
  1326                           ; 1 bytes @ 0x6
  1327  0076                     	ds	1
  1328  0077                     ___lwdiv@counter:	
  1329  0077                     ___awdiv@quotient:	
  1330                           ; 1 bytes @ 0x7
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x7
  1334  0077                     	ds	1
  1335  0078                     ?___lwmod:	
  1336  0078                     ___lwmod@divisor:	
  1337                           ; 2 bytes @ 0x8
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x8
  1341  0078                     	ds	1
  1342  0079                     MAX31855_ReadData@DataW:	
  1343                           
  1344                           ; 1 bytes @ 0x9
  1345  0079                     	ds	1
  1346  007A                     MAX31855_ReadData@i:	
  1347  007A                     ___lwmod@dividend:	
  1348                           ; 1 bytes @ 0xA
  1349                           
  1350                           
  1351                           ; 2 bytes @ 0xA
  1352  007A                     	ds	1
  1353  007B                     MAX31855_ReadData@obj:	
  1354                           
  1355                           ; 1 bytes @ 0xB
  1356  007B                     	ds	1
  1357  007C                     ??___lwmod:	
  1358  007C                     ?_MAX31855_ReadExtTemp:	
  1359                           ; 1 bytes @ 0xC
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0xC
  1363  007C                     	ds	1
  1364  007D                     ___lwmod@counter:	
  1365                           
  1366                           ; 1 bytes @ 0xD
  1367  007D                     	ds	1
  1368                           
  1369                           	psect	cstackBANK0
  1370  0020                     __pcstackBANK0:	
  1371  0020                     ??_MAX31855_ReadExtTemp:	
  1372                           
  1373                           ; 1 bytes @ 0x0
  1374  0020                     	ds	4
  1375  0024                     MAX31855_ReadExtTemp@value:	
  1376                           
  1377                           ; 2 bytes @ 0x4
  1378  0024                     	ds	2
  1379  0026                     MAX31855_ReadExtTemp@obj:	
  1380                           
  1381                           ; 1 bytes @ 0x6
  1382  0026                     	ds	1
  1383  0027                     ?_printf:	
  1384  0027                     printf@f:	
  1385                           ; 2 bytes @ 0x7
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x7
  1389  0027                     	ds	6
  1390  002D                     ??_printf:	
  1391                           
  1392                           ; 1 bytes @ 0xD
  1393  002D                     	ds	4
  1394  0031                     printf@idx:	
  1395                           
  1396                           ; 1 bytes @ 0x11
  1397  0031                     	ds	1
  1398  0032                     printf@ap:	
  1399                           
  1400                           ; 1 bytes @ 0x12
  1401  0032                     	ds	1
  1402  0033                     printf@prec:	
  1403                           
  1404                           ; 1 bytes @ 0x13
  1405  0033                     	ds	1
  1406  0034                     printf@val:	
  1407                           
  1408                           ; 2 bytes @ 0x14
  1409  0034                     	ds	2
  1410  0036                     printf@flag:	
  1411                           
  1412                           ; 1 bytes @ 0x16
  1413  0036                     	ds	1
  1414  0037                     printf@width:	
  1415                           
  1416                           ; 2 bytes @ 0x17
  1417  0037                     	ds	2
  1418  0039                     printf@c:	
  1419                           
  1420                           ; 1 bytes @ 0x19
  1421  0039                     	ds	1
  1422  003A                     ??_main:	
  1423                           
  1424                           ; 1 bytes @ 0x1A
  1425  003A                     	ds	4
  1426                           
  1427                           	psect	maintext
  1428  055A                     __pmaintext:	
  1429 ;;
  1430 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1431 ;;
  1432 ;; *************** function _main *****************
  1433 ;; Defined at:
  1434 ;;		line 64 in file "main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : B1F/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1448 ;;      Params:         0       0       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0
  1450 ;;      Temps:          0       4       0       0       0       0       0       0
  1451 ;;      Totals:         0       4       0       0       0       0       0       0
  1452 ;;Total ram usage:        4 bytes
  1453 ;; Hardware stack levels required when called:    3
  1454 ;; This function calls:
  1455 ;;		_MAX31855_Init
  1456 ;;		_MAX31855_ReadExtTemp
  1457 ;;		_SYSTEM_Initialize
  1458 ;;		_printf
  1459 ;; This function is called by:
  1460 ;;		Startup code after reset
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _main
  1466  055A                     _main:	
  1467                           
  1468                           ;main.c: 67: SYSTEM_Initialize();
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1472  055A  3183  23D1  3185   	fcall	_SYSTEM_Initialize
  1473                           
  1474                           ;main.c: 84: MAX31855_Init(&Max31855_Data,SPI_Exchange8bit,wrapperpin);
  1475  055D  30AA               	movlw	low _SPI_Exchange8bit
  1476  055E  00F0               	movwf	MAX31855_Init@SPI_TransferByte
  1477  055F  3003               	movlw	high _SPI_Exchange8bit
  1478  0560  00F1               	movwf	MAX31855_Init@SPI_TransferByte+1
  1479  0561  30BA               	movlw	low _wrapperpin
  1480  0562  00F2               	movwf	MAX31855_Init@SPI_cs_ss
  1481  0563  3003               	movlw	high _wrapperpin
  1482  0564  00F3               	movwf	MAX31855_Init@SPI_cs_ss+1
  1483  0565  3043               	movlw	(low (_Max31855_Data| 0))& (0+255)
  1484  0566  3183  23E0  3185   	fcall	_MAX31855_Init
  1485  0569                     l1652:	
  1486                           ;main.c: 86: while (1)
  1487                           
  1488                           
  1489                           ;main.c: 87: {
  1490                           ;main.c: 96: printf("%04X",Max31855_Data.TempDataRegFull>>16);
  1491  0569  3034               	movlw	low (STR_1| (0+32768))
  1492  056A  0020               	movlb	0	; select bank0
  1493  056B  00A7               	movwf	printf@f
  1494  056C  3088               	movlw	high (STR_1| (0+32768))
  1495  056D  00A8               	movwf	printf@f+1
  1496  056E  0843               	movf	_Max31855_Data,w
  1497  056F  00BA               	movwf	??_main
  1498  0570  0844               	movf	_Max31855_Data+1,w
  1499  0571  00BB               	movwf	??_main+1
  1500  0572  0845               	movf	_Max31855_Data+2,w
  1501  0573  00BC               	movwf	??_main+2
  1502  0574  0846               	movf	_Max31855_Data+3,w
  1503  0575  00BD               	movwf	??_main+3
  1504  0576  3010               	movlw	16
  1505  0577                     u1435:	
  1506  0577  36BD               	lsrf	??_main+3,f
  1507  0578  0CBC               	rrf	??_main+2,f
  1508  0579  0CBB               	rrf	??_main+1,f
  1509  057A  0CBA               	rrf	??_main,f
  1510  057B  0B89               	decfsz	9,f
  1511  057C  2D77               	goto	u1435
  1512  057D  083D               	movf	??_main+3,w
  1513  057E  00AC               	movwf	?_printf+5
  1514  057F  083C               	movf	??_main+2,w
  1515  0580  00AB               	movwf	?_printf+4
  1516  0581  083B               	movf	??_main+1,w
  1517  0582  00AA               	movwf	?_printf+3
  1518  0583  083A               	movf	??_main,w
  1519  0584  00A9               	movwf	?_printf+2
  1520  0585  3186  262A  3185   	fcall	_printf
  1521                           
  1522                           ;main.c: 97: printf("%04X ",Max31855_Data.TempDataRegFull & 0xffff);
  1523  0588  302E               	movlw	low (STR_2| (0+32768))
  1524  0589  0020               	movlb	0	; select bank0
  1525  058A  00A7               	movwf	printf@f
  1526  058B  3088               	movlw	high (STR_2| (0+32768))
  1527  058C  00A8               	movwf	printf@f+1
  1528  058D  30FF               	movlw	255
  1529  058E  0543               	andwf	_Max31855_Data,w
  1530  058F  00A9               	movwf	?_printf+2
  1531  0590  30FF               	movlw	255
  1532  0591  0544               	andwf	_Max31855_Data+1,w
  1533  0592  00AA               	movwf	?_printf+3
  1534  0593  3000               	movlw	0
  1535  0594  0545               	andwf	_Max31855_Data+2,w
  1536  0595  00AB               	movwf	?_printf+4
  1537  0596  3000               	movlw	0
  1538  0597  0546               	andwf	_Max31855_Data+3,w
  1539  0598  00AC               	movwf	?_printf+5
  1540  0599  3186  262A  3185   	fcall	_printf
  1541                           
  1542                           ;main.c: 98: printf(" Temp %d\r\n", MAX31855_ReadExtTemp(&Max31855_Data));
  1543  059C  3011               	movlw	low (STR_3| (0+32768))
  1544  059D  0020               	movlb	0	; select bank0
  1545  059E  00A7               	movwf	printf@f
  1546  059F  3088               	movlw	high (STR_3| (0+32768))
  1547  05A0  00A8               	movwf	printf@f+1
  1548  05A1  3043               	movlw	(low (_Max31855_Data| 0))& (0+255)
  1549  05A2  3185  25BB  3185   	fcall	_MAX31855_ReadExtTemp
  1550  05A5  087D               	movf	?_MAX31855_ReadExtTemp+1,w
  1551  05A6  0020               	movlb	0	; select bank0
  1552  05A7  00AA               	movwf	?_printf+3
  1553  05A8  087C               	movf	?_MAX31855_ReadExtTemp,w
  1554  05A9  00A9               	movwf	?_printf+2
  1555  05AA  3186  262A  3185   	fcall	_printf
  1556                           
  1557                           ;main.c: 101: _delay((unsigned long)((500)*(4000000/4000.0)));
  1558  05AD  3003               	movlw	3
  1559  05AE  0020               	movlb	0	; select bank0
  1560  05AF  00BB               	movwf	??_main+1
  1561  05B0  308A               	movlw	138
  1562  05B1  00BA               	movwf	??_main
  1563  05B2  3055               	movlw	85
  1564  05B3                     u1477:	
  1565  05B3  0B89               	decfsz	9,f
  1566  05B4  2DB3               	goto	u1477
  1567  05B5  0BBA               	decfsz	??_main,f
  1568  05B6  2DB3               	goto	u1477
  1569  05B7  0BBB               	decfsz	??_main+1,f
  1570  05B8  2DB3               	goto	u1477
  1571  05B9  3200               	nop2
  1572  05BA  2D69               	goto	l1652
  1573  05BB                     __end_of_main:	
  1574                           
  1575                           	psect	text1
  1576  062A                     __ptext1:	
  1577 ;; *************** function _printf *****************
  1578 ;; Defined at:
  1579 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  1582 ;;		 -> STR_3(11), STR_2(6), STR_1(5), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  idx             1   17[BANK0 ] unsigned char 
  1585 ;;  tmpval          4    0        struct .
  1586 ;;  width           2   23[BANK0 ] int 
  1587 ;;  val             2   20[BANK0 ] unsigned int 
  1588 ;;  cp              2    0        PTR const unsigned char 
  1589 ;;  len             2    0        unsigned int 
  1590 ;;  c               1   25[BANK0 ] char 
  1591 ;;  flag            1   22[BANK0 ] unsigned char 
  1592 ;;  prec            1   19[BANK0 ] char 
  1593 ;;  ap              1   18[BANK0 ] PTR void [1]
  1594 ;;		 -> ?_printf(2), 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2    7[BANK0 ] int 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1604 ;;      Params:         0       6       0       0       0       0       0       0
  1605 ;;      Locals:         0       9       0       0       0       0       0       0
  1606 ;;      Temps:          0       4       0       0       0       0       0       0
  1607 ;;      Totals:         0      19       0       0       0       0       0       0
  1608 ;;Total ram usage:       19 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    2
  1611 ;; This function calls:
  1612 ;;		___lwdiv
  1613 ;;		___lwmod
  1614 ;;		___wmul
  1615 ;;		_isdigit
  1616 ;;		_putch
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _printf
  1624  062A                     _printf:	
  1625                           
  1626                           ;doprnt.c: 466: va_list ap;
  1627                           ;doprnt.c: 499: signed char c;
  1628                           ;doprnt.c: 501: int width;
  1629                           ;doprnt.c: 506: signed char prec;
  1630                           ;doprnt.c: 508: unsigned char flag;
  1631                           ;doprnt.c: 523: union {
  1632                           ;doprnt.c: 524: unsigned long vd;
  1633                           ;doprnt.c: 525: double integ;
  1634                           ;doprnt.c: 526: } tmpval;
  1635                           ;doprnt.c: 528: unsigned int val;
  1636                           ;doprnt.c: 529: unsigned len;
  1637                           ;doprnt.c: 530: const char * cp;
  1638                           ;doprnt.c: 533: *ap = __va_start();
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1642  062A  3029               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1643  062B  0020               	movlb	0	; select bank0
  1644  062C  00AD               	movwf	??_printf
  1645  062D  082D               	movf	??_printf,w
  1646  062E  00B2               	movwf	printf@ap
  1647  062F                     l1590:	
  1648                           ;doprnt.c: 536: while(c = *f++) {
  1649                           
  1650  062F  0020               	movlb	0	; select bank0
  1651  0630  0828               	movf	printf@f+1,w
  1652  0631  00AE               	movwf	??_printf+1
  1653  0632  0827               	movf	printf@f,w
  1654  0633  00AD               	movwf	??_printf
  1655  0634  0AA7               	incf	printf@f,f
  1656  0635  1903               	skipnz
  1657  0636  0AA8               	incf	printf@f+1,f
  1658  0637  082D               	movf	??_printf,w
  1659  0638  0084               	movwf	4
  1660  0639  082E               	movf	??_printf+1,w
  1661  063A  0085               	movwf	5
  1662  063B  0800               	movf	0,w	;code access
  1663  063C  00AF               	movwf	??_printf+2
  1664  063D  082F               	movf	??_printf+2,w
  1665  063E  00B9               	movwf	printf@c
  1666  063F  0839               	movf	printf@c,w
  1667  0640  1903               	btfsc	3,2
  1668  0641  0008               	return
  1669                           
  1670                           ;doprnt.c: 538: if(c != '%')
  1671  0642  3025               	movlw	37
  1672  0643  0639               	xorwf	printf@c,w
  1673  0644  1903               	btfsc	3,2
  1674  0645  2E4B               	goto	l1480
  1675                           
  1676                           ;doprnt.c: 540: {
  1677                           ;doprnt.c: 541: (putch(c) );
  1678  0646  0839               	movf	printf@c,w
  1679  0647  3183  237F  3186   	fcall	_putch
  1680                           
  1681                           ;doprnt.c: 542: continue;
  1682  064A  2E2F               	goto	l1590
  1683  064B                     l1480:	
  1684                           
  1685                           ;doprnt.c: 543: }
  1686                           ;doprnt.c: 546: width = 0;
  1687  064B  0020               	movlb	0	; select bank0
  1688  064C  01B7               	clrf	printf@width
  1689  064D  01B8               	clrf	printf@width+1
  1690                           
  1691                           ;doprnt.c: 548: flag = 0;
  1692  064E  01B6               	clrf	printf@flag
  1693                           
  1694                           ;doprnt.c: 551: switch(*f) {
  1695                           
  1696                           ;doprnt.c: 550: for(;;) {
  1697  064F  2E55               	goto	l1486
  1698  0650                     l277:	
  1699                           ;doprnt.c: 579: case '0':
  1700                           
  1701                           
  1702                           ;doprnt.c: 580: flag |= 0x04;
  1703  0650  1536               	bsf	printf@flag,2
  1704                           
  1705                           ;doprnt.c: 581: f++;
  1706  0651  3001               	movlw	1
  1707  0652  07A7               	addwf	printf@f,f
  1708  0653  3000               	movlw	0
  1709  0654  3DA8               	addwfc	printf@f+1,f
  1710  0655                     l1486:	
  1711                           ;doprnt.c: 584: }
  1712                           
  1713                           ;doprnt.c: 582: continue;
  1714                           
  1715  0655  0827               	movf	printf@f,w
  1716  0656  0084               	movwf	4
  1717  0657  0828               	movf	printf@f+1,w
  1718  0658  0085               	movwf	5
  1719  0659  0800               	movf	0,w	;code access
  1720                           
  1721                           ; Switch size 1, requested type "space"
  1722                           ; Number of cases is 1, Range of values is 48 to 48
  1723                           ; switch strategies available:
  1724                           ; Name         Instructions Cycles
  1725                           ; simple_byte            4     3 (average)
  1726                           ; direct_byte           11     9 (fixed)
  1727                           ; jumptable            263     9 (fixed)
  1728                           ;	Chosen strategy is simple_byte
  1729  065A  3A30               	xorlw	48	; case 48
  1730  065B  1903               	skipnz
  1731  065C  2E50               	goto	l277
  1732  065D  2E5E               	goto	l1488
  1733  065E                     l1488:	
  1734                           ;doprnt.c: 586: }
  1735                           
  1736                           ;doprnt.c: 585: break;
  1737                           
  1738                           
  1739                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1740  065E  0827               	movf	printf@f,w
  1741  065F  0084               	movwf	4
  1742  0660  0828               	movf	printf@f+1,w
  1743  0661  0085               	movwf	5
  1744  0662  0800               	movf	0,w	;code access
  1745  0663  3183  23C3  3186   	fcall	_isdigit
  1746  0666  1C03               	btfss	3,0
  1747  0667  2E9D               	goto	l1502
  1748                           
  1749                           ;doprnt.c: 598: width = 0;
  1750  0668  0020               	movlb	0	; select bank0
  1751  0669  01B7               	clrf	printf@width
  1752  066A  01B8               	clrf	printf@width+1
  1753  066B                     l1492:	
  1754                           ;doprnt.c: 599: do {
  1755                           
  1756                           
  1757                           ;doprnt.c: 600: width *= 10;
  1758  066B  300A               	movlw	10
  1759  066C  00F0               	movwf	___wmul@multiplier
  1760  066D  3000               	movlw	0
  1761  066E  00F1               	movwf	___wmul@multiplier+1
  1762  066F  0020               	movlb	0	; select bank0
  1763  0670  0838               	movf	printf@width+1,w
  1764  0671  00F3               	movwf	___wmul@multiplicand+1
  1765  0672  0837               	movf	printf@width,w
  1766  0673  00F2               	movwf	___wmul@multiplicand
  1767  0674  3183  23F2  3186   	fcall	___wmul
  1768  0677  0871               	movf	?___wmul+1,w
  1769  0678  0020               	movlb	0	; select bank0
  1770  0679  00B8               	movwf	printf@width+1
  1771  067A  0870               	movf	?___wmul,w
  1772  067B  00B7               	movwf	printf@width
  1773                           
  1774                           ;doprnt.c: 601: width += *f++ - '0';
  1775  067C  0827               	movf	printf@f,w
  1776  067D  0084               	movwf	4
  1777  067E  0828               	movf	printf@f+1,w
  1778  067F  0085               	movwf	5
  1779  0680  0800               	movf	0,w	;code access
  1780  0681  3ED0               	addlw	208
  1781  0682  00AD               	movwf	??_printf
  1782  0683  30FF               	movlw	255
  1783  0684  1803               	skipnc
  1784  0685  3000               	movlw	0
  1785  0686  00AE               	movwf	??_printf+1
  1786  0687  082D               	movf	??_printf,w
  1787  0688  07B7               	addwf	printf@width,f
  1788  0689  082E               	movf	??_printf+1,w
  1789  068A  3DB8               	addwfc	printf@width+1,f
  1790  068B  3001               	movlw	1
  1791  068C  07A7               	addwf	printf@f,f
  1792  068D  3000               	movlw	0
  1793  068E  3DA8               	addwfc	printf@f+1,f
  1794                           
  1795                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1796  068F  0827               	movf	printf@f,w
  1797  0690  0084               	movwf	4
  1798  0691  0828               	movf	printf@f+1,w
  1799  0692  0085               	movwf	5
  1800  0693  0800               	movf	0,w	;code access
  1801  0694  3183  23C3  3186   	fcall	_isdigit
  1802  0697  1C03               	btfss	3,0
  1803  0698  2E9D               	goto	l1502
  1804  0699  2E6B               	goto	l1492
  1805  069A                     l291:	
  1806                           ;doprnt.c: 712: case 'X':
  1807                           
  1808                           ;doprnt.c: 698: case 'i':
  1809                           ;doprnt.c: 699: break;
  1810                           
  1811                           ;doprnt.c: 697: case 'd':
  1812                           
  1813                           ;doprnt.c: 638: goto alldone;
  1814                           
  1815                           ;doprnt.c: 637: case 0:
  1816                           
  1817                           ;doprnt.c: 608: }
  1818                           ;doprnt.c: 635: switch(c = *f++) {
  1819                           
  1820                           
  1821                           ;doprnt.c: 718: case 'x':
  1822                           ;doprnt.c: 721: flag |= 0x80;
  1823  069A  0020               	movlb	0	; select bank0
  1824  069B  17B6               	bsf	printf@flag,7
  1825                           
  1826                           ;doprnt.c: 723: break;
  1827  069C  2EBB               	goto	l289
  1828  069D                     l1502:	
  1829                           ;doprnt.c: 822: }
  1830                           
  1831                           ;doprnt.c: 813: continue;
  1832                           
  1833                           ;doprnt.c: 802: default:
  1834                           
  1835  069D  0020               	movlb	0	; select bank0
  1836  069E  0828               	movf	printf@f+1,w
  1837  069F  00AE               	movwf	??_printf+1
  1838  06A0  0827               	movf	printf@f,w
  1839  06A1  00AD               	movwf	??_printf
  1840  06A2  0AA7               	incf	printf@f,f
  1841  06A3  1903               	skipnz
  1842  06A4  0AA8               	incf	printf@f+1,f
  1843  06A5  082D               	movf	??_printf,w
  1844  06A6  0084               	movwf	4
  1845  06A7  082E               	movf	??_printf+1,w
  1846  06A8  0085               	movwf	5
  1847  06A9  0800               	movf	0,w	;code access
  1848  06AA  00B9               	movwf	printf@c
  1849                           
  1850                           ; Switch size 1, requested type "space"
  1851                           ; Number of cases is 5, Range of values is 0 to 120
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte           16     9 (average)
  1855                           ; direct_byte          248     6 (fixed)
  1856                           ; jumptable            260     6 (fixed)
  1857                           ;	Chosen strategy is simple_byte
  1858  06AB  3A00               	xorlw	0	; case 0
  1859  06AC  1903               	skipnz
  1860  06AD  2FF5               	goto	l327
  1861  06AE  3A58               	xorlw	88	; case 88
  1862  06AF  1903               	skipnz
  1863  06B0  2E9A               	goto	l291
  1864  06B1  3A3C               	xorlw	60	; case 100
  1865  06B2  1903               	skipnz
  1866  06B3  2EBB               	goto	l289
  1867  06B4  3A0D               	xorlw	13	; case 105
  1868  06B5  1903               	skipnz
  1869  06B6  2EBB               	goto	l289
  1870  06B7  3A11               	xorlw	17	; case 120
  1871  06B8  1903               	skipnz
  1872  06B9  2E9A               	goto	l291
  1873  06BA  2E2F               	goto	l1590
  1874  06BB                     l289:	
  1875                           
  1876                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1877  06BB  0020               	movlb	0	; select bank0
  1878  06BC  1BB6               	btfsc	printf@flag,7
  1879  06BD  2ED5               	goto	l1514
  1880                           
  1881                           ;doprnt.c: 1253: {
  1882                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1883  06BE  0832               	movf	printf@ap,w
  1884  06BF  0086               	movwf	6
  1885  06C0  0187               	clrf	7
  1886  06C1  3F40               	moviw [0]fsr1
  1887  06C2  00B4               	movwf	printf@val
  1888  06C3  3F41               	moviw [1]fsr1
  1889  06C4  00B5               	movwf	printf@val+1
  1890  06C5  3002               	movlw	2
  1891  06C6  00AD               	movwf	??_printf
  1892  06C7  082D               	movf	??_printf,w
  1893  06C8  07B2               	addwf	printf@ap,f
  1894                           
  1895                           ;doprnt.c: 1261: if((int)val < 0) {
  1896  06C9  1FB5               	btfss	printf@val+1,7
  1897  06CA  2F25               	goto	l1540
  1898                           
  1899                           ;doprnt.c: 1262: flag |= 0x03;
  1900  06CB  3003               	movlw	3
  1901  06CC  00AD               	movwf	??_printf
  1902  06CD  082D               	movf	??_printf,w
  1903  06CE  04B6               	iorwf	printf@flag,f
  1904                           
  1905                           ;doprnt.c: 1263: val = -val;
  1906  06CF  09B4               	comf	printf@val,f
  1907  06D0  09B5               	comf	printf@val+1,f
  1908  06D1  0AB4               	incf	printf@val,f
  1909  06D2  1903               	skipnz
  1910  06D3  0AB5               	incf	printf@val+1,f
  1911                           
  1912                           ;doprnt.c: 1264: }
  1913                           ;doprnt.c: 1266: }
  1914  06D4  2F25               	goto	l1540
  1915  06D5                     l1514:	
  1916                           
  1917                           ;doprnt.c: 1268: else
  1918                           ;doprnt.c: 1273: {
  1919                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1920  06D5  0832               	movf	printf@ap,w
  1921  06D6  0086               	movwf	6
  1922  06D7  0187               	clrf	7
  1923  06D8  3F40               	moviw [0]fsr1
  1924  06D9  00B4               	movwf	printf@val
  1925  06DA  3F41               	moviw [1]fsr1
  1926  06DB  00B5               	movwf	printf@val+1
  1927  06DC  3002               	movlw	2
  1928  06DD  00AD               	movwf	??_printf
  1929  06DE  082D               	movf	??_printf,w
  1930  06DF  07B2               	addwf	printf@ap,f
  1931                           
  1932                           ;doprnt.c: 1287: }
  1933                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1934  06E0  2F25               	goto	l1540
  1935  06E1                     l297:	
  1936                           ;doprnt.c: 1299: case 0x00:
  1937                           
  1938                           
  1939                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1940  06E1  01B9               	clrf	printf@c
  1941  06E2  0AB9               	incf	printf@c,f
  1942  06E3                     L3:	
  1943  06E3  3005               	movlw	5
  1944  06E4  0639               	xorwf	printf@c,w
  1945  06E5  1903               	btfsc	3,2
  1946  06E6  2F2E               	goto	l1542
  1947                           
  1948                           ;doprnt.c: 1306: if(val < dpowers[c])
  1949  06E7  0839               	movf	printf@c,w
  1950  06E8  00AD               	movwf	??_printf
  1951  06E9  01AE               	clrf	??_printf+1
  1952  06EA  35AD               	lslf	??_printf,f
  1953  06EB  0DAE               	rlf	??_printf+1,f
  1954  06EC  301C               	movlw	low (_dpowers| (0+32768))
  1955  06ED  072D               	addwf	??_printf,w
  1956  06EE  0084               	movwf	4
  1957  06EF  3088               	movlw	high (_dpowers| (0+32768))
  1958  06F0  3D2E               	addwfc	??_printf+1,w
  1959  06F1  0085               	movwf	5
  1960  06F2  3F00               	moviw [0]fsr0
  1961  06F3  00AF               	movwf	??_printf+2
  1962  06F4  3F01               	moviw [1]fsr0
  1963  06F5  00B0               	movwf	??_printf+3
  1964  06F6  0830               	movf	??_printf+3,w
  1965  06F7  0235               	subwf	printf@val+1,w
  1966  06F8  1D03               	skipz
  1967  06F9  2EFC               	goto	u1155
  1968  06FA  082F               	movf	??_printf+2,w
  1969  06FB  0234               	subwf	printf@val,w
  1970  06FC                     u1155:	
  1971  06FC  1C03               	btfss	3,0
  1972  06FD  2F2E               	goto	l1542
  1973                           
  1974                           ;doprnt.c: 1307: break;
  1975  06FE  3001               	movlw	1
  1976  06FF  00AD               	movwf	??_printf
  1977  0700  082D               	movf	??_printf,w
  1978  0701  07B9               	addwf	printf@c,f
  1979  0702  2EE3               	goto	L3
  1980  0703                     l302:	
  1981                           ;doprnt.c: 1314: case 0x80:
  1982                           
  1983                           ;doprnt.c: 1309: break;
  1984                           
  1985                           
  1986                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1987  0703  01B9               	clrf	printf@c
  1988  0704  0AB9               	incf	printf@c,f
  1989  0705                     L4:	
  1990  0705  3004               	movlw	4
  1991  0706  0639               	xorwf	printf@c,w
  1992  0707  1903               	btfsc	3,2
  1993  0708  2F2E               	goto	l1542
  1994                           
  1995                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1996  0709  0839               	movf	printf@c,w
  1997  070A  00AD               	movwf	??_printf
  1998  070B  01AE               	clrf	??_printf+1
  1999  070C  35AD               	lslf	??_printf,f
  2000  070D  0DAE               	rlf	??_printf+1,f
  2001  070E  3026               	movlw	low (_hexpowers| (0+32768))
  2002  070F  072D               	addwf	??_printf,w
  2003  0710  0084               	movwf	4
  2004  0711  3088               	movlw	high (_hexpowers| (0+32768))
  2005  0712  3D2E               	addwfc	??_printf+1,w
  2006  0713  0085               	movwf	5
  2007  0714  3F00               	moviw [0]fsr0
  2008  0715  00AF               	movwf	??_printf+2
  2009  0716  3F01               	moviw [1]fsr0
  2010  0717  00B0               	movwf	??_printf+3
  2011  0718  0830               	movf	??_printf+3,w
  2012  0719  0235               	subwf	printf@val+1,w
  2013  071A  1D03               	skipz
  2014  071B  2F1E               	goto	u1185
  2015  071C  082F               	movf	??_printf+2,w
  2016  071D  0234               	subwf	printf@val,w
  2017  071E                     u1185:	
  2018  071E  1C03               	btfss	3,0
  2019  071F  2F2E               	goto	l1542
  2020                           
  2021                           ;doprnt.c: 1318: break;
  2022  0720  3001               	movlw	1
  2023  0721  00AD               	movwf	??_printf
  2024  0722  082D               	movf	??_printf,w
  2025  0723  07B9               	addwf	printf@c,f
  2026  0724  2F05               	goto	L4
  2027  0725                     l1540:	
  2028                           ;doprnt.c: 1336: }
  2029                           
  2030                           ;doprnt.c: 1320: break;
  2031                           
  2032  0725  0836               	movf	printf@flag,w
  2033  0726  3980               	andlw	128
  2034                           
  2035                           ; Switch size 1, requested type "space"
  2036                           ; Number of cases is 2, Range of values is 0 to 128
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte            7     4 (average)
  2040                           ; jumptable            260     6 (fixed)
  2041                           ;	Chosen strategy is simple_byte
  2042  0727  3A00               	xorlw	0	; case 0
  2043  0728  1903               	skipnz
  2044  0729  2EE1               	goto	l297
  2045  072A  3A80               	xorlw	128	; case 128
  2046  072B  1903               	skipnz
  2047  072C  2F03               	goto	l302
  2048  072D  2F2E               	goto	l1542
  2049  072E                     l1542:	
  2050                           
  2051                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2052  072E  0837               	movf	printf@width,w
  2053  072F  0438               	iorwf	printf@width+1,w
  2054  0730  1903               	btfsc	3,2
  2055  0731  2F3A               	goto	l306
  2056  0732  0836               	movf	printf@flag,w
  2057  0733  3903               	andlw	3
  2058  0734  1903               	btfsc	3,2
  2059  0735  2F3A               	goto	l306
  2060                           
  2061                           ;doprnt.c: 1346: width--;
  2062  0736  30FF               	movlw	255
  2063  0737  07B7               	addwf	printf@width,f
  2064  0738  30FF               	movlw	255
  2065  0739  3DB8               	addwfc	printf@width+1,f
  2066  073A                     l306:	
  2067                           
  2068                           ;doprnt.c: 1381: if(width > c)
  2069  073A  0839               	movf	printf@c,w
  2070  073B  00AD               	movwf	??_printf
  2071  073C  01AE               	clrf	??_printf+1
  2072  073D  1BAD               	btfsc	??_printf,7
  2073  073E  03AE               	decf	??_printf+1,f
  2074  073F  082E               	movf	??_printf+1,w
  2075  0740  3A80               	xorlw	128
  2076  0741  00AF               	movwf	??_printf+2
  2077  0742  0838               	movf	printf@width+1,w
  2078  0743  3A80               	xorlw	128
  2079  0744  022F               	subwf	??_printf+2,w
  2080  0745  1D03               	skipz
  2081  0746  2F49               	goto	u1225
  2082  0747  0837               	movf	printf@width,w
  2083  0748  022D               	subwf	??_printf,w
  2084  0749                     u1225:	
  2085  0749  1803               	skipnc
  2086  074A  2F56               	goto	l1550
  2087                           
  2088                           ;doprnt.c: 1382: width -= c;
  2089  074B  0020               	movlb	0	; select bank0
  2090  074C  0839               	movf	printf@c,w
  2091  074D  00AD               	movwf	??_printf
  2092  074E  01AE               	clrf	??_printf+1
  2093  074F  1BAD               	btfsc	??_printf,7
  2094  0750  03AE               	decf	??_printf+1,f
  2095  0751  082D               	movf	??_printf,w
  2096  0752  02B7               	subwf	printf@width,f
  2097  0753  082E               	movf	??_printf+1,w
  2098  0754  3BB8               	subwfb	printf@width+1,f
  2099  0755  2F59               	goto	l1552
  2100  0756                     l1550:	
  2101                           
  2102                           ;doprnt.c: 1383: else
  2103                           ;doprnt.c: 1384: width = 0;
  2104  0756  0020               	movlb	0	; select bank0
  2105  0757  01B7               	clrf	printf@width
  2106  0758  01B8               	clrf	printf@width+1
  2107  0759                     l1552:	
  2108                           
  2109                           ;doprnt.c: 1387: if(flag & 0x04) {
  2110  0759  1D36               	btfss	printf@flag,2
  2111  075A  2F72               	goto	l1564
  2112                           
  2113                           ;doprnt.c: 1392: if(flag & 0x03)
  2114  075B  0836               	movf	printf@flag,w
  2115  075C  3903               	andlw	3
  2116  075D  1903               	btfsc	3,2
  2117  075E  2F63               	goto	l1558
  2118                           
  2119                           ;doprnt.c: 1393: (putch('-') );
  2120  075F  302D               	movlw	45
  2121  0760  3183  237F  3186   	fcall	_putch
  2122  0763                     l1558:	
  2123                           
  2124                           ;doprnt.c: 1415: if(width)
  2125  0763  0020               	movlb	0	; select bank0
  2126  0764                     L5:	
  2127  0764  0837               	movf	printf@width,w
  2128  0765  0438               	iorwf	printf@width+1,w
  2129  0766  1903               	btfsc	3,2
  2130  0767  2F8B               	goto	l1574
  2131                           
  2132                           ;doprnt.c: 1417: (putch('0') );
  2133                           
  2134                           ;doprnt.c: 1416: do
  2135  0768  3030               	movlw	48
  2136  0769  3183  237F  3186   	fcall	_putch
  2137                           
  2138                           ;doprnt.c: 1418: while(--width);
  2139  076C  30FF               	movlw	255
  2140  076D  0020               	movlb	0	; select bank0
  2141  076E  07B7               	addwf	printf@width,f
  2142  076F  30FF               	movlw	255
  2143  0770  3DB8               	addwfc	printf@width+1,f
  2144  0771  2F64               	goto	L5
  2145  0772                     l1564:	
  2146                           ;doprnt.c: 1420: } else
  2147                           
  2148                           
  2149                           ;doprnt.c: 1422: {
  2150                           ;doprnt.c: 1424: if(width
  2151                           ;doprnt.c: 1428: )
  2152  0772  0837               	movf	printf@width,w
  2153  0773  0438               	iorwf	printf@width+1,w
  2154  0774  1903               	btfsc	3,2
  2155  0775  2F83               	goto	l1570
  2156  0776                     l1566:	
  2157                           ;doprnt.c: 1429: do
  2158                           
  2159                           
  2160                           ;doprnt.c: 1430: (putch(' ') );
  2161  0776  3020               	movlw	32
  2162  0777  3183  237F  3186   	fcall	_putch
  2163                           
  2164                           ;doprnt.c: 1431: while(--width);
  2165  077A  30FF               	movlw	255
  2166  077B  0020               	movlb	0	; select bank0
  2167  077C  07B7               	addwf	printf@width,f
  2168  077D  30FF               	movlw	255
  2169  077E  3DB8               	addwfc	printf@width+1,f
  2170  077F  0837               	movf	printf@width,w
  2171  0780  0438               	iorwf	printf@width+1,w
  2172  0781  1D03               	btfss	3,2
  2173  0782  2F76               	goto	l1566
  2174  0783                     l1570:	
  2175                           
  2176                           ;doprnt.c: 1438: if(flag & 0x03)
  2177  0783  0836               	movf	printf@flag,w
  2178  0784  3903               	andlw	3
  2179  0785  1903               	btfsc	3,2
  2180  0786  2F8B               	goto	l1574
  2181                           
  2182                           ;doprnt.c: 1439: (putch('-') );
  2183  0787  302D               	movlw	45
  2184  0788  3183  237F  3186   	fcall	_putch
  2185  078B                     l1574:	
  2186                           
  2187                           ;doprnt.c: 1469: }
  2188                           ;doprnt.c: 1472: prec = c;
  2189  078B  0020               	movlb	0	; select bank0
  2190  078C  0839               	movf	printf@c,w
  2191  078D  00AD               	movwf	??_printf
  2192  078E  082D               	movf	??_printf,w
  2193  078F  00B3               	movwf	printf@prec
  2194                           
  2195                           ;doprnt.c: 1474: while(prec--) {
  2196  0790  2FE3               	goto	l1588
  2197  0791                     l1576:	
  2198                           ;doprnt.c: 1478: {
  2199                           ;doprnt.c: 1483: case 0x00:
  2200                           
  2201                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  2202                           
  2203                           
  2204                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2205  0791  300A               	movlw	10
  2206  0792  00F8               	movwf	___lwmod@divisor
  2207  0793  3000               	movlw	0
  2208  0794  00F9               	movwf	___lwmod@divisor+1
  2209  0795  0833               	movf	printf@prec,w
  2210  0796  00AD               	movwf	??_printf
  2211  0797  01AE               	clrf	??_printf+1
  2212  0798  35AD               	lslf	??_printf,f
  2213  0799  0DAE               	rlf	??_printf+1,f
  2214  079A  301C               	movlw	low (_dpowers| (0+32768))
  2215  079B  072D               	addwf	??_printf,w
  2216  079C  0084               	movwf	4
  2217  079D  3088               	movlw	high (_dpowers| (0+32768))
  2218  079E  3D2E               	addwfc	??_printf+1,w
  2219  079F  0085               	movwf	5
  2220  07A0  3F00               	moviw [0]fsr0
  2221  07A1  00F0               	movwf	___lwdiv@divisor
  2222  07A2  3F01               	moviw [1]fsr0
  2223  07A3  00F1               	movwf	___lwdiv@divisor+1
  2224  07A4  0835               	movf	printf@val+1,w
  2225  07A5  00F3               	movwf	___lwdiv@dividend+1
  2226  07A6  0834               	movf	printf@val,w
  2227  07A7  00F2               	movwf	___lwdiv@dividend
  2228  07A8  3184  247C  3186   	fcall	___lwdiv
  2229  07AB  0871               	movf	?___lwdiv+1,w
  2230  07AC  00FB               	movwf	___lwmod@dividend+1
  2231  07AD  0870               	movf	?___lwdiv,w
  2232  07AE  00FA               	movwf	___lwmod@dividend
  2233  07AF  3184  2450  3186   	fcall	___lwmod
  2234  07B2  0878               	movf	?___lwmod,w
  2235  07B3  3E30               	addlw	48
  2236  07B4  0020               	movlb	0	; select bank0
  2237  07B5  00AF               	movwf	??_printf+2
  2238  07B6  082F               	movf	??_printf+2,w
  2239  07B7  2FDE               	goto	L2
  2240  07B8                     l1578:	
  2241                           ;doprnt.c: 1497: case 0x80:
  2242                           
  2243                           ;doprnt.c: 1491: break;
  2244                           
  2245                           
  2246                           ;doprnt.c: 1499: {
  2247                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2248  07B8  0833               	movf	printf@prec,w
  2249  07B9  00AD               	movwf	??_printf
  2250  07BA  01AE               	clrf	??_printf+1
  2251  07BB  35AD               	lslf	??_printf,f
  2252  07BC  0DAE               	rlf	??_printf+1,f
  2253  07BD  3026               	movlw	low (_hexpowers| (0+32768))
  2254  07BE  072D               	addwf	??_printf,w
  2255  07BF  0084               	movwf	4
  2256  07C0  3088               	movlw	high (_hexpowers| (0+32768))
  2257  07C1  3D2E               	addwfc	??_printf+1,w
  2258  07C2  0085               	movwf	5
  2259  07C3  3F00               	moviw [0]fsr0
  2260  07C4  00F0               	movwf	___lwdiv@divisor
  2261  07C5  3F01               	moviw [1]fsr0
  2262  07C6  00F1               	movwf	___lwdiv@divisor+1
  2263  07C7  0835               	movf	printf@val+1,w
  2264  07C8  00F3               	movwf	___lwdiv@dividend+1
  2265  07C9  0834               	movf	printf@val,w
  2266  07CA  00F2               	movwf	___lwdiv@dividend
  2267  07CB  3184  247C  3186   	fcall	___lwdiv
  2268  07CE  0870               	movf	?___lwdiv,w
  2269  07CF  390F               	andlw	15
  2270  07D0  0020               	movlb	0	; select bank0
  2271  07D1  00AF               	movwf	??_printf+2
  2272  07D2  082F               	movf	??_printf+2,w
  2273  07D3  00B1               	movwf	printf@idx
  2274                           
  2275                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  2276  07D4  0831               	movf	printf@idx,w
  2277  07D5  3E00               	addlw	low (STR_4| (0+32768))
  2278  07D6  0084               	movwf	4
  2279  07D7  3088               	movlw	high (STR_4| (0+32768))
  2280  07D8  1803               	skipnc
  2281  07D9  3E01               	addlw	1
  2282  07DA  0085               	movwf	5
  2283  07DB  0800               	movf	0,w	;code access
  2284  07DC  00AD               	movwf	??_printf
  2285  07DD  082D               	movf	??_printf,w
  2286  07DE                     L2:	
  2287  07DE  00B9               	movwf	printf@c
  2288  07DF                     l1586:	
  2289                           ;doprnt.c: 1523: }
  2290                           
  2291                           ;doprnt.c: 1508: }
  2292                           ;doprnt.c: 1510: break;
  2293                           
  2294                           
  2295                           ;doprnt.c: 1524: (putch(c) );
  2296  07DF  0839               	movf	printf@c,w
  2297  07E0  3183  237F  3186   	fcall	_putch
  2298  07E3                     l1588:	
  2299  07E3  30FF               	movlw	255
  2300  07E4  0020               	movlb	0	; select bank0
  2301  07E5  00AD               	movwf	??_printf
  2302  07E6  082D               	movf	??_printf,w
  2303  07E7  07B3               	addwf	printf@prec,f
  2304  07E8  0A33               	incf	printf@prec,w
  2305  07E9  1903               	btfsc	3,2
  2306  07EA  2E2F               	goto	l1590
  2307  07EB  0836               	movf	printf@flag,w
  2308  07EC  3980               	andlw	128
  2309                           
  2310                           ; Switch size 1, requested type "space"
  2311                           ; Number of cases is 2, Range of values is 0 to 128
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte            7     4 (average)
  2315                           ; jumptable            260     6 (fixed)
  2316                           ;	Chosen strategy is simple_byte
  2317  07ED  3A00               	xorlw	0	; case 0
  2318  07EE  1903               	skipnz
  2319  07EF  2F91               	goto	l1576
  2320  07F0  3A80               	xorlw	128	; case 128
  2321  07F1  1903               	skipnz
  2322  07F2  2FB8               	goto	l1578
  2323  07F3  2FDF               	goto	l1586
  2324  07F4  2FDF               	goto	l1586
  2325  07F5                     l327:	
  2326                           ;doprnt.c: 1540: return 0;
  2327                           ;	Return value of _printf is never used
  2328                           
  2329                           ;doprnt.c: 1525: }
  2330                           ;doprnt.c: 1533: }
  2331                           ;doprnt.c: 1535: alldone:
  2332                           
  2333  07F5  0008               	return
  2334  07F6                     __end_of_printf:	
  2335                           
  2336                           	psect	text2
  2337  037F                     __ptext2:	
  2338 ;; *************** function _putch *****************
  2339 ;; Defined at:
  2340 ;;		line 146 in file "mcc_generated_files/eusart.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  txData          1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  txData          1    1[COMMON] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0, pclath, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2354 ;;      Params:         0       0       0       0       0       0       0       0
  2355 ;;      Locals:         1       0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0
  2357 ;;      Totals:         1       0       0       0       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    1
  2361 ;; This function calls:
  2362 ;;		_EUSART_Write
  2363 ;; This function is called by:
  2364 ;;		_printf
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _putch
  2370  037F                     _putch:	
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2374                           ;putch@txData stored from wreg
  2375  037F  00F1               	movwf	putch@txData
  2376                           
  2377                           ;eusart.c: 148: EUSART_Write(txData);
  2378  0380  0871               	movf	putch@txData,w
  2379  0381  3183  23B2         	fcall	_EUSART_Write
  2380  0383  0008               	return
  2381  0384                     __end_of_putch:	
  2382                           
  2383                           	psect	text3
  2384  03B2                     __ptext3:	
  2385 ;; *************** function _EUSART_Write *****************
  2386 ;; Defined at:
  2387 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  txData          1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  txData          1    0[COMMON] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2401 ;;      Params:         0       0       0       0       0       0       0       0
  2402 ;;      Locals:         1       0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0
  2404 ;;      Totals:         1       0       0       0       0       0       0       0
  2405 ;;Total ram usage:        1 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_putch
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _EUSART_Write
  2416  03B2                     _EUSART_Write:	
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _EUSART_Write: [wreg]
  2420                           ;EUSART_Write@txData stored from wreg
  2421  03B2  00F0               	movwf	EUSART_Write@txData
  2422  03B3                     l230:	
  2423                           ;eusart.c: 135: {
  2424                           
  2425                           ;eusart.c: 134: while(0 == PIR1bits.TXIF)
  2426                           
  2427  03B3  0020               	movlb	0	; select bank0
  2428  03B4  1E11               	btfss	17,4	;volatile
  2429  03B5  2BB3               	goto	l230
  2430                           
  2431                           ;eusart.c: 136: }
  2432                           ;eusart.c: 138: TXREG = txData;
  2433  03B6  0870               	movf	EUSART_Write@txData,w
  2434  03B7  0023               	movlb	3	; select bank3
  2435  03B8  009A               	movwf	26	;volatile
  2436  03B9  0008               	return
  2437  03BA                     __end_of_EUSART_Write:	
  2438                           
  2439                           	psect	text4
  2440  03C3                     __ptext4:	
  2441 ;; *************** function _isdigit *****************
  2442 ;; Defined at:
  2443 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  c               1    wreg     unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  c               1    1[COMMON] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;		None               void
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2457 ;;      Params:         0       0       0       0       0       0       0       0
  2458 ;;      Locals:         2       0       0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0
  2460 ;;      Totals:         2       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_printf
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _isdigit
  2472  03C3                     _isdigit:	
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2476                           ;isdigit@c stored from wreg
  2477  03C3  00F1               	movwf	isdigit@c
  2478  03C4  01F0               	clrf	_isdigit$796
  2479  03C5  303A               	movlw	58
  2480  03C6  0271               	subwf	isdigit@c,w
  2481  03C7  1803               	skipnc
  2482  03C8  2BCF               	goto	l1360
  2483  03C9  3030               	movlw	48
  2484  03CA  0271               	subwf	isdigit@c,w
  2485  03CB  1C03               	skipc
  2486  03CC  2BCF               	goto	l1360
  2487  03CD  01F0               	clrf	_isdigit$796
  2488  03CE  0AF0               	incf	_isdigit$796,f
  2489  03CF                     l1360:	
  2490  03CF  0C70               	rrf	_isdigit$796,w
  2491  03D0  0008               	return
  2492  03D1                     __end_of_isdigit:	
  2493                           
  2494                           	psect	text5
  2495  03F2                     __ptext5:	
  2496 ;; *************** function ___wmul *****************
  2497 ;; Defined at:
  2498 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  multiplier      2    0[COMMON] unsigned int 
  2501 ;;  multiplicand    2    2[COMMON] unsigned int 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  product         2    4[COMMON] unsigned int 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  2    0[COMMON] unsigned int 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2513 ;;      Params:         4       0       0       0       0       0       0       0
  2514 ;;      Locals:         2       0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0
  2516 ;;      Totals:         6       0       0       0       0       0       0       0
  2517 ;;Total ram usage:        6 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_printf
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function ___wmul
  2528  03F2                     ___wmul:	
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2532  03F2  01F4               	clrf	___wmul@product
  2533  03F3  01F5               	clrf	___wmul@product+1
  2534  03F4                     l1366:	
  2535  03F4  1C70               	btfss	___wmul@multiplier,0
  2536  03F5  2BFA               	goto	l411
  2537  03F6  0872               	movf	___wmul@multiplicand,w
  2538  03F7  07F4               	addwf	___wmul@product,f
  2539  03F8  0873               	movf	___wmul@multiplicand+1,w
  2540  03F9  3DF5               	addwfc	___wmul@product+1,f
  2541  03FA                     l411:	
  2542  03FA  3001               	movlw	1
  2543  03FB                     u835:	
  2544  03FB  35F2               	lslf	___wmul@multiplicand,f
  2545  03FC  0DF3               	rlf	___wmul@multiplicand+1,f
  2546  03FD  0B89               	decfsz	9,f
  2547  03FE  2BFB               	goto	u835
  2548  03FF  3001               	movlw	1
  2549  0400                     u845:	
  2550  0400  36F1               	lsrf	___wmul@multiplier+1,f
  2551  0401  0CF0               	rrf	___wmul@multiplier,f
  2552  0402  0B89               	decfsz	9,f
  2553  0403  2C00               	goto	u845
  2554  0404  0870               	movf	___wmul@multiplier,w
  2555  0405  0471               	iorwf	___wmul@multiplier+1,w
  2556  0406  1D03               	btfss	3,2
  2557  0407  2BF4               	goto	l1366
  2558  0408  0875               	movf	___wmul@product+1,w
  2559  0409  00F1               	movwf	?___wmul+1
  2560  040A  0874               	movf	___wmul@product,w
  2561  040B  00F0               	movwf	?___wmul
  2562  040C  0008               	return
  2563  040D                     __end_of___wmul:	
  2564                           
  2565                           	psect	text6
  2566  0450                     __ptext6:	
  2567 ;; *************** function ___lwmod *****************
  2568 ;; Defined at:
  2569 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  divisor         2    8[COMMON] unsigned int 
  2572 ;;  dividend        2   10[COMMON] unsigned int 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  counter         1   13[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    8[COMMON] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2584 ;;      Params:         4       0       0       0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0       0       0       0
  2586 ;;      Temps:          1       0       0       0       0       0       0       0
  2587 ;;      Totals:         6       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        6 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_printf
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           
  2598                           ;psect for function ___lwmod
  2599  0450                     ___lwmod:	
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2603  0450  0878               	movf	___lwmod@divisor,w
  2604  0451  0479               	iorwf	___lwmod@divisor+1,w
  2605  0452  1903               	btfsc	3,2
  2606  0453  2C77               	goto	l1466
  2607  0454  01FD               	clrf	___lwmod@counter
  2608  0455  0AFD               	incf	___lwmod@counter,f
  2609  0456                     l1456:	
  2610  0456  1BF9               	btfsc	___lwmod@divisor+1,7
  2611  0457  2C62               	goto	l1458
  2612  0458  3001               	movlw	1
  2613  0459                     u1045:	
  2614  0459  35F8               	lslf	___lwmod@divisor,f
  2615  045A  0DF9               	rlf	___lwmod@divisor+1,f
  2616  045B  0B89               	decfsz	9,f
  2617  045C  2C59               	goto	u1045
  2618  045D  3001               	movlw	1
  2619  045E  00FC               	movwf	??___lwmod
  2620  045F  087C               	movf	??___lwmod,w
  2621  0460  07FD               	addwf	___lwmod@counter,f
  2622  0461  2C56               	goto	l1456
  2623  0462                     l1458:	
  2624  0462  0879               	movf	___lwmod@divisor+1,w
  2625  0463  027B               	subwf	___lwmod@dividend+1,w
  2626  0464  1D03               	skipz
  2627  0465  2C68               	goto	u1065
  2628  0466  0878               	movf	___lwmod@divisor,w
  2629  0467  027A               	subwf	___lwmod@dividend,w
  2630  0468                     u1065:	
  2631  0468  1C03               	skipc
  2632  0469  2C6E               	goto	l1462
  2633  046A  0878               	movf	___lwmod@divisor,w
  2634  046B  02FA               	subwf	___lwmod@dividend,f
  2635  046C  0879               	movf	___lwmod@divisor+1,w
  2636  046D  3BFB               	subwfb	___lwmod@dividend+1,f
  2637  046E                     l1462:	
  2638  046E  3001               	movlw	1
  2639  046F                     u1075:	
  2640  046F  36F9               	lsrf	___lwmod@divisor+1,f
  2641  0470  0CF8               	rrf	___lwmod@divisor,f
  2642  0471  0B89               	decfsz	9,f
  2643  0472  2C6F               	goto	u1075
  2644  0473  3001               	movlw	1
  2645  0474  02FD               	subwf	___lwmod@counter,f
  2646  0475  1D03               	btfss	3,2
  2647  0476  2C62               	goto	l1458
  2648  0477                     l1466:	
  2649  0477  087B               	movf	___lwmod@dividend+1,w
  2650  0478  00F9               	movwf	?___lwmod+1
  2651  0479  087A               	movf	___lwmod@dividend,w
  2652  047A  00F8               	movwf	?___lwmod
  2653  047B  0008               	return
  2654  047C                     __end_of___lwmod:	
  2655                           
  2656                           	psect	text7
  2657  047C                     __ptext7:	
  2658 ;; *************** function ___lwdiv *****************
  2659 ;; Defined at:
  2660 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  divisor         2    0[COMMON] unsigned int 
  2663 ;;  dividend        2    2[COMMON] unsigned int 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  quotient        2    5[COMMON] unsigned int 
  2666 ;;  counter         1    7[COMMON] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2    0[COMMON] unsigned int 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2676 ;;      Params:         4       0       0       0       0       0       0       0
  2677 ;;      Locals:         3       0       0       0       0       0       0       0
  2678 ;;      Temps:          1       0       0       0       0       0       0       0
  2679 ;;      Totals:         8       0       0       0       0       0       0       0
  2680 ;;Total ram usage:        8 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_printf
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function ___lwdiv
  2691  047C                     ___lwdiv:	
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2695  047C  01F5               	clrf	___lwdiv@quotient
  2696  047D  01F6               	clrf	___lwdiv@quotient+1
  2697  047E  0870               	movf	___lwdiv@divisor,w
  2698  047F  0471               	iorwf	___lwdiv@divisor+1,w
  2699  0480  1903               	btfsc	3,2
  2700  0481  2CAB               	goto	l1444
  2701  0482  01F7               	clrf	___lwdiv@counter
  2702  0483  0AF7               	incf	___lwdiv@counter,f
  2703  0484                     l1432:	
  2704  0484  1BF1               	btfsc	___lwdiv@divisor+1,7
  2705  0485  2C90               	goto	l1434
  2706  0486  3001               	movlw	1
  2707  0487                     u975:	
  2708  0487  35F0               	lslf	___lwdiv@divisor,f
  2709  0488  0DF1               	rlf	___lwdiv@divisor+1,f
  2710  0489  0B89               	decfsz	9,f
  2711  048A  2C87               	goto	u975
  2712  048B  3001               	movlw	1
  2713  048C  00F4               	movwf	??___lwdiv
  2714  048D  0874               	movf	??___lwdiv,w
  2715  048E  07F7               	addwf	___lwdiv@counter,f
  2716  048F  2C84               	goto	l1432
  2717  0490                     l1434:	
  2718  0490  3001               	movlw	1
  2719  0491                     u995:	
  2720  0491  35F5               	lslf	___lwdiv@quotient,f
  2721  0492  0DF6               	rlf	___lwdiv@quotient+1,f
  2722  0493  0B89               	decfsz	9,f
  2723  0494  2C91               	goto	u995
  2724  0495  0871               	movf	___lwdiv@divisor+1,w
  2725  0496  0273               	subwf	___lwdiv@dividend+1,w
  2726  0497  1D03               	skipz
  2727  0498  2C9B               	goto	u1005
  2728  0499  0870               	movf	___lwdiv@divisor,w
  2729  049A  0272               	subwf	___lwdiv@dividend,w
  2730  049B                     u1005:	
  2731  049B  1C03               	skipc
  2732  049C  2CA2               	goto	l1440
  2733  049D  0870               	movf	___lwdiv@divisor,w
  2734  049E  02F2               	subwf	___lwdiv@dividend,f
  2735  049F  0871               	movf	___lwdiv@divisor+1,w
  2736  04A0  3BF3               	subwfb	___lwdiv@dividend+1,f
  2737  04A1  1475               	bsf	___lwdiv@quotient,0
  2738  04A2                     l1440:	
  2739  04A2  3001               	movlw	1
  2740  04A3                     u1015:	
  2741  04A3  36F1               	lsrf	___lwdiv@divisor+1,f
  2742  04A4  0CF0               	rrf	___lwdiv@divisor,f
  2743  04A5  0B89               	decfsz	9,f
  2744  04A6  2CA3               	goto	u1015
  2745  04A7  3001               	movlw	1
  2746  04A8  02F7               	subwf	___lwdiv@counter,f
  2747  04A9  1D03               	btfss	3,2
  2748  04AA  2C90               	goto	l1434
  2749  04AB                     l1444:	
  2750  04AB  0876               	movf	___lwdiv@quotient+1,w
  2751  04AC  00F1               	movwf	?___lwdiv+1
  2752  04AD  0875               	movf	___lwdiv@quotient,w
  2753  04AE  00F0               	movwf	?___lwdiv
  2754  04AF  0008               	return
  2755  04B0                     __end_of___lwdiv:	
  2756                           
  2757                           	psect	text8
  2758  03D1                     __ptext8:	
  2759 ;; *************** function _SYSTEM_Initialize *****************
  2760 ;; Defined at:
  2761 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2775 ;;      Params:         0       0       0       0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    2
  2782 ;; This function calls:
  2783 ;;		_EUSART_Initialize
  2784 ;;		_OSCILLATOR_Initialize
  2785 ;;		_PIN_MANAGER_Initialize
  2786 ;;		_SPI_Initialize
  2787 ;;		_WDT_Initialize
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _SYSTEM_Initialize
  2795  03D1                     _SYSTEM_Initialize:	
  2796                           
  2797                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2798                           
  2799                           ;incstack = 0
  2800                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2801  03D1  3184  242E  3183   	fcall	_PIN_MANAGER_Initialize
  2802                           
  2803                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2804  03D4  3183  239C  3183   	fcall	_OSCILLATOR_Initialize
  2805                           
  2806                           ;mcc.c: 55: WDT_Initialize();
  2807  03D7  3183  237B  3183   	fcall	_WDT_Initialize
  2808                           
  2809                           ;mcc.c: 56: SPI_Initialize();
  2810  03DA  3183  23A3  3183   	fcall	_SPI_Initialize
  2811                           
  2812                           ;mcc.c: 57: EUSART_Initialize();
  2813  03DD  3184  240D         	fcall	_EUSART_Initialize
  2814  03DF  0008               	return
  2815  03E0                     __end_of_SYSTEM_Initialize:	
  2816                           
  2817                           	psect	text9
  2818  037B                     __ptext9:	
  2819 ;; *************** function _WDT_Initialize *****************
  2820 ;; Defined at:
  2821 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2835 ;;      Params:         0       0       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_SYSTEM_Initialize
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _WDT_Initialize
  2850  037B                     _WDT_Initialize:	
  2851                           
  2852                           ;mcc.c: 73: WDTCON = 0x16;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _WDT_Initialize: [wreg]
  2856  037B  3016               	movlw	22
  2857  037C  0021               	movlb	1	; select bank1
  2858  037D  0097               	movwf	23	;volatile
  2859  037E  0008               	return
  2860  037F                     __end_of_WDT_Initialize:	
  2861                           
  2862                           	psect	text10
  2863  03A3                     __ptext10:	
  2864 ;; *************** function _SPI_Initialize *****************
  2865 ;; Defined at:
  2866 ;;		line 65 in file "mcc_generated_files/spi.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2880 ;;      Params:         0       0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_SYSTEM_Initialize
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _SPI_Initialize
  2895  03A3                     _SPI_Initialize:	
  2896                           
  2897                           ;spi.c: 70: SSPSTAT = 0xC0;
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  2901  03A3  30C0               	movlw	192
  2902  03A4  0024               	movlb	4	; select bank4
  2903  03A5  0094               	movwf	20	;volatile
  2904                           
  2905                           ;spi.c: 73: SSPCON1 = 0x20;
  2906  03A6  3020               	movlw	32
  2907  03A7  0095               	movwf	21	;volatile
  2908                           
  2909                           ;spi.c: 76: SSPADD = 0x00;
  2910  03A8  0192               	clrf	18	;volatile
  2911  03A9  0008               	return
  2912  03AA                     __end_of_SPI_Initialize:	
  2913                           
  2914                           	psect	text11
  2915  042E                     __ptext11:	
  2916 ;; *************** function _PIN_MANAGER_Initialize *****************
  2917 ;; Defined at:
  2918 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2932 ;;      Params:         0       0       0       0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_SYSTEM_Initialize
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _PIN_MANAGER_Initialize
  2947  042E                     _PIN_MANAGER_Initialize:	
  2948                           
  2949                           ;pin_manager.c: 60: LATE = 0x00;
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2953  042E  0022               	movlb	2	; select bank2
  2954  042F  0190               	clrf	16	;volatile
  2955                           
  2956                           ;pin_manager.c: 61: LATD = 0x00;
  2957  0430  018F               	clrf	15	;volatile
  2958                           
  2959                           ;pin_manager.c: 62: LATA = 0x00;
  2960  0431  018C               	clrf	12	;volatile
  2961                           
  2962                           ;pin_manager.c: 63: LATB = 0x00;
  2963  0432  018D               	clrf	13	;volatile
  2964                           
  2965                           ;pin_manager.c: 64: LATC = 0x00;
  2966  0433  018E               	clrf	14	;volatile
  2967                           
  2968                           ;pin_manager.c: 69: TRISE = 0x0F;
  2969  0434  300F               	movlw	15
  2970  0435  0021               	movlb	1	; select bank1
  2971  0436  0090               	movwf	16	;volatile
  2972                           
  2973                           ;pin_manager.c: 70: TRISA = 0xFF;
  2974  0437  30FF               	movlw	255
  2975  0438  008C               	movwf	12	;volatile
  2976                           
  2977                           ;pin_manager.c: 71: TRISB = 0xFF;
  2978  0439  30FF               	movlw	255
  2979  043A  008D               	movwf	13	;volatile
  2980                           
  2981                           ;pin_manager.c: 72: TRISC = 0x96;
  2982  043B  3096               	movlw	150
  2983  043C  008E               	movwf	14	;volatile
  2984                           
  2985                           ;pin_manager.c: 73: TRISD = 0xFF;
  2986  043D  30FF               	movlw	255
  2987  043E  008F               	movwf	15	;volatile
  2988                           
  2989                           ;pin_manager.c: 78: ANSELD = 0xFF;
  2990  043F  30FF               	movlw	255
  2991  0440  0023               	movlb	3	; select bank3
  2992  0441  008F               	movwf	15	;volatile
  2993                           
  2994                           ;pin_manager.c: 79: ANSELB = 0x3F;
  2995  0442  303F               	movlw	63
  2996  0443  008D               	movwf	13	;volatile
  2997                           
  2998                           ;pin_manager.c: 80: ANSELE = 0x07;
  2999  0444  3007               	movlw	7
  3000  0445  0090               	movwf	16	;volatile
  3001                           
  3002                           ;pin_manager.c: 81: ANSELA = 0x3F;
  3003  0446  303F               	movlw	63
  3004  0447  008C               	movwf	12	;volatile
  3005                           
  3006                           ;pin_manager.c: 86: WPUE = 0x00;
  3007  0448  0024               	movlb	4	; select bank4
  3008  0449  0190               	clrf	16	;volatile
  3009                           
  3010                           ;pin_manager.c: 87: WPUB = 0x00;
  3011  044A  018D               	clrf	13	;volatile
  3012                           
  3013                           ;pin_manager.c: 88: OPTION_REGbits.nWPUEN = 1;
  3014  044B  0021               	movlb	1	; select bank1
  3015  044C  1795               	bsf	21,7	;volatile
  3016                           
  3017                           ;pin_manager.c: 94: APFCON = 0x00;
  3018  044D  0022               	movlb	2	; select bank2
  3019  044E  019D               	clrf	29	;volatile
  3020  044F  0008               	return
  3021  0450                     __end_of_PIN_MANAGER_Initialize:	
  3022                           
  3023                           	psect	text12
  3024  039C                     __ptext12:	
  3025 ;; *************** function _OSCILLATOR_Initialize *****************
  3026 ;; Defined at:
  3027 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3041 ;;      Params:         0       0       0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_SYSTEM_Initialize
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           
  3055                           ;psect for function _OSCILLATOR_Initialize
  3056  039C                     _OSCILLATOR_Initialize:	
  3057                           
  3058                           ;mcc.c: 63: OSCCON = 0x6A;
  3059                           
  3060                           ;incstack = 0
  3061                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3062  039C  306A               	movlw	106
  3063  039D  0021               	movlb	1	; select bank1
  3064  039E  0099               	movwf	25	;volatile
  3065                           
  3066                           ;mcc.c: 65: OSCTUNE = 0x00;
  3067  039F  0198               	clrf	24	;volatile
  3068                           
  3069                           ;mcc.c: 67: BORCON = 0x00;
  3070  03A0  0022               	movlb	2	; select bank2
  3071  03A1  0196               	clrf	22	;volatile
  3072  03A2  0008               	return
  3073  03A3                     __end_of_OSCILLATOR_Initialize:	
  3074                           
  3075                           	psect	text13
  3076  040D                     __ptext13:	
  3077 ;; *************** function _EUSART_Initialize *****************
  3078 ;; Defined at:
  3079 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3093 ;;      Params:         0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    1
  3100 ;; This function calls:
  3101 ;;		_EUSART_SetErrorHandler
  3102 ;;		_EUSART_SetFramingErrorHandler
  3103 ;;		_EUSART_SetOverrunErrorHandler
  3104 ;; This function is called by:
  3105 ;;		_SYSTEM_Initialize
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           
  3110                           ;psect for function _EUSART_Initialize
  3111  040D                     _EUSART_Initialize:	
  3112                           
  3113                           ;eusart.c: 71: BAUDCON = 0x08;
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3117  040D  3008               	movlw	8
  3118  040E  0023               	movlb	3	; select bank3
  3119  040F  009F               	movwf	31	;volatile
  3120                           
  3121                           ;eusart.c: 74: RCSTA = 0x80;
  3122  0410  3080               	movlw	128
  3123  0411  009D               	movwf	29	;volatile
  3124                           
  3125                           ;eusart.c: 77: TXSTA = 0x24;
  3126  0412  3024               	movlw	36
  3127  0413  009E               	movwf	30	;volatile
  3128                           
  3129                           ;eusart.c: 80: SPBRGL = 0x67;
  3130  0414  3067               	movlw	103
  3131  0415  009B               	movwf	27	;volatile
  3132                           
  3133                           ;eusart.c: 83: SPBRGH = 0x00;
  3134  0416  019C               	clrf	28	;volatile
  3135                           
  3136                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  3137  0417  3000               	movlw	0
  3138  0418  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3139  0419  3000               	movlw	0
  3140  041A  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3141  041B  3183  238A  3184   	fcall	_EUSART_SetFramingErrorHandler
  3142                           
  3143                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  3144  041E  3000               	movlw	0
  3145  041F  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3146  0420  3000               	movlw	0
  3147  0421  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3148  0422  3183  2390  3184   	fcall	_EUSART_SetOverrunErrorHandler
  3149                           
  3150                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  3151  0425  3000               	movlw	0
  3152  0426  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3153  0427  3000               	movlw	0
  3154  0428  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3155  0429  3183  2384         	fcall	_EUSART_SetErrorHandler
  3156                           
  3157                           ;eusart.c: 90: eusartRxLastError.status = 0;
  3158  042B  0020               	movlb	0	; select bank0
  3159  042C  01C2               	clrf	_eusartRxLastError	;volatile
  3160  042D  0008               	return
  3161  042E                     __end_of_EUSART_Initialize:	
  3162                           
  3163                           	psect	text14
  3164  0390                     __ptext14:	
  3165 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3166 ;; Defined at:
  3167 ;;		line 170 in file "mcc_generated_files/eusart.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3170 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3182 ;;      Params:         2       0       0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0
  3185 ;;      Totals:         2       0       0       0       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_EUSART_Initialize
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _EUSART_SetOverrunErrorHandler
  3197  0390                     _EUSART_SetOverrunErrorHandler:	
  3198                           
  3199                           ;eusart.c: 171: EUSART_OverrunErrorHandler = interruptHandler;
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3203  0390  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3204  0391  0020               	movlb	0	; select bank0
  3205  0392  00CE               	movwf	_EUSART_OverrunErrorHandler+1
  3206  0393  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3207  0394  00CD               	movwf	_EUSART_OverrunErrorHandler
  3208  0395  0008               	return
  3209  0396                     __end_of_EUSART_SetOverrunErrorHandler:	
  3210                           
  3211                           	psect	text15
  3212  038A                     __ptext15:	
  3213 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3214 ;; Defined at:
  3215 ;;		line 166 in file "mcc_generated_files/eusart.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3218 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3230 ;;      Params:         2       0       0       0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0
  3233 ;;      Totals:         2       0       0       0       0       0       0       0
  3234 ;;Total ram usage:        2 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_EUSART_Initialize
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function _EUSART_SetFramingErrorHandler
  3245  038A                     _EUSART_SetFramingErrorHandler:	
  3246                           
  3247                           ;eusart.c: 167: EUSART_FramingErrorHandler = interruptHandler;
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3251  038A  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3252  038B  0020               	movlb	0	; select bank0
  3253  038C  00D0               	movwf	_EUSART_FramingErrorHandler+1
  3254  038D  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3255  038E  00CF               	movwf	_EUSART_FramingErrorHandler
  3256  038F  0008               	return
  3257  0390                     __end_of_EUSART_SetFramingErrorHandler:	
  3258                           
  3259                           	psect	text16
  3260  0384                     __ptext16:	
  3261 ;; *************** function _EUSART_SetErrorHandler *****************
  3262 ;; Defined at:
  3263 ;;		line 174 in file "mcc_generated_files/eusart.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3266 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3278 ;;      Params:         2       0       0       0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0
  3281 ;;      Totals:         2       0       0       0       0       0       0       0
  3282 ;;Total ram usage:        2 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_EUSART_Initialize
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _EUSART_SetErrorHandler
  3293  0384                     _EUSART_SetErrorHandler:	
  3294                           
  3295                           ;eusart.c: 175: EUSART_ErrorHandler = interruptHandler;
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3299  0384  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3300  0385  0020               	movlb	0	; select bank0
  3301  0386  00CC               	movwf	_EUSART_ErrorHandler+1
  3302  0387  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3303  0388  00CB               	movwf	_EUSART_ErrorHandler
  3304  0389  0008               	return
  3305  038A                     __end_of_EUSART_SetErrorHandler:	
  3306                           
  3307                           	psect	text17
  3308  05BB                     __ptext17:	
  3309 ;; *************** function _MAX31855_ReadExtTemp *****************
  3310 ;; Defined at:
  3311 ;;		line 57 in file "Max31855.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  obj             1    wreg     PTR struct .
  3314 ;;		 -> Max31855_Data(8), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  obj             1    6[BANK0 ] PTR struct .
  3317 ;;		 -> Max31855_Data(8), 
  3318 ;;  value           2    4[BANK0 ] int 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2   12[COMMON] int 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3328 ;;      Params:         2       0       0       0       0       0       0       0
  3329 ;;      Locals:         0       3       0       0       0       0       0       0
  3330 ;;      Temps:          0       4       0       0       0       0       0       0
  3331 ;;      Totals:         2       7       0       0       0       0       0       0
  3332 ;;Total ram usage:        9 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    2
  3335 ;; This function calls:
  3336 ;;		_MAX31855_ReadData
  3337 ;;		___awdiv
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _MAX31855_ReadExtTemp
  3345  05BB                     _MAX31855_ReadExtTemp:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _MAX31855_ReadExtTemp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3349                           ;MAX31855_ReadExtTemp@obj stored from wreg
  3350  05BB  0020               	movlb	0	; select bank0
  3351  05BC  00A6               	movwf	MAX31855_ReadExtTemp@obj
  3352                           
  3353                           ;Max31855.c: 58: int16_t value;
  3354                           ;Max31855.c: 60: MAX31855_ReadData(obj);
  3355  05BD  0826               	movf	MAX31855_ReadExtTemp@obj,w
  3356  05BE  3185  2501  3185   	fcall	_MAX31855_ReadData
  3357                           
  3358                           ;Max31855.c: 63: if (obj->TempDataRegFull & ((uint32_t)1 << 31)) {
  3359  05C1  0020               	movlb	0	; select bank0
  3360  05C2  0826               	movf	MAX31855_ReadExtTemp@obj,w
  3361  05C3  0086               	movwf	6
  3362  05C4  0187               	clrf	7
  3363  05C5  3F40               	moviw [0]fsr1
  3364  05C6  00A0               	movwf	??_MAX31855_ReadExtTemp
  3365  05C7  3F41               	moviw [1]fsr1
  3366  05C8  00A1               	movwf	??_MAX31855_ReadExtTemp+1
  3367  05C9  3F42               	moviw [2]fsr1
  3368  05CA  00A2               	movwf	??_MAX31855_ReadExtTemp+2
  3369  05CB  3F43               	moviw [3]fsr1
  3370  05CC  00A3               	movwf	??_MAX31855_ReadExtTemp+3
  3371  05CD  1FA3               	btfss	??_MAX31855_ReadExtTemp+3,7
  3372  05CE  2DFE               	goto	l1600
  3373                           
  3374                           ;Max31855.c: 64: value = ((obj->TempDataRegFull >> 18) & 0x3FFF);
  3375  05CF  0826               	movf	MAX31855_ReadExtTemp@obj,w
  3376  05D0  0086               	movwf	6
  3377  05D1  0187               	clrf	7
  3378  05D2  3F40               	moviw [0]fsr1
  3379  05D3  00A0               	movwf	??_MAX31855_ReadExtTemp
  3380  05D4  3F41               	moviw [1]fsr1
  3381  05D5  00A1               	movwf	??_MAX31855_ReadExtTemp+1
  3382  05D6  3F42               	moviw [2]fsr1
  3383  05D7  00A2               	movwf	??_MAX31855_ReadExtTemp+2
  3384  05D8  3F43               	moviw [3]fsr1
  3385  05D9  00A3               	movwf	??_MAX31855_ReadExtTemp+3
  3386  05DA  3012               	movlw	18
  3387  05DB                     u1335:	
  3388  05DB  36A3               	lsrf	??_MAX31855_ReadExtTemp+3,f
  3389  05DC  0CA2               	rrf	??_MAX31855_ReadExtTemp+2,f
  3390  05DD  0CA1               	rrf	??_MAX31855_ReadExtTemp+1,f
  3391  05DE  0CA0               	rrf	??_MAX31855_ReadExtTemp,f
  3392  05DF  0B89               	decfsz	9,f
  3393  05E0  2DDB               	goto	u1335
  3394  05E1  30FF               	movlw	255
  3395  05E2  0520               	andwf	??_MAX31855_ReadExtTemp,w
  3396  05E3  00A4               	movwf	MAX31855_ReadExtTemp@value
  3397  05E4  303F               	movlw	63
  3398  05E5  0521               	andwf	??_MAX31855_ReadExtTemp+1,w
  3399  05E6  00A5               	movwf	MAX31855_ReadExtTemp@value+1
  3400                           
  3401                           ;Max31855.c: 65: value = ( (~ (value ) & 0x3fff ) + 0x01 ) / (-4);
  3402  05E7  30FC               	movlw	252
  3403  05E8  00F0               	movwf	___awdiv@divisor
  3404  05E9  30FF               	movlw	255
  3405  05EA  00F1               	movwf	___awdiv@divisor+1
  3406  05EB  0825               	movf	MAX31855_ReadExtTemp@value+1,w
  3407  05EC  00A1               	movwf	??_MAX31855_ReadExtTemp+1
  3408  05ED  0824               	movf	MAX31855_ReadExtTemp@value,w
  3409  05EE  00A0               	movwf	??_MAX31855_ReadExtTemp
  3410  05EF  09A0               	comf	??_MAX31855_ReadExtTemp,f
  3411  05F0  09A1               	comf	??_MAX31855_ReadExtTemp+1,f
  3412  05F1  30FF               	movlw	255
  3413  05F2  0520               	andwf	??_MAX31855_ReadExtTemp,w
  3414  05F3  00A2               	movwf	??_MAX31855_ReadExtTemp+2
  3415  05F4  303F               	movlw	63
  3416  05F5  0521               	andwf	??_MAX31855_ReadExtTemp+1,w
  3417  05F6  00A3               	movwf	??_MAX31855_ReadExtTemp+3
  3418  05F7  0822               	movf	??_MAX31855_ReadExtTemp+2,w
  3419  05F8  3E01               	addlw	1
  3420  05F9  00F2               	movwf	___awdiv@dividend
  3421  05FA  3000               	movlw	0
  3422  05FB  3D23               	addwfc	??_MAX31855_ReadExtTemp+3,w
  3423  05FC  00F3               	movwf	___awdiv@dividend+1
  3424  05FD  2E1E               	goto	L7
  3425  05FE                     l1600:	
  3426                           ;Max31855.c: 66: } else {
  3427                           
  3428                           
  3429                           ;Max31855.c: 67: value = (obj->TempDataRegFull >> 18) & 0x3fff;
  3430  05FE  0826               	movf	MAX31855_ReadExtTemp@obj,w
  3431  05FF  0086               	movwf	6
  3432  0600  0187               	clrf	7
  3433  0601  3F40               	moviw [0]fsr1
  3434  0602  00A0               	movwf	??_MAX31855_ReadExtTemp
  3435  0603  3F41               	moviw [1]fsr1
  3436  0604  00A1               	movwf	??_MAX31855_ReadExtTemp+1
  3437  0605  3F42               	moviw [2]fsr1
  3438  0606  00A2               	movwf	??_MAX31855_ReadExtTemp+2
  3439  0607  3F43               	moviw [3]fsr1
  3440  0608  00A3               	movwf	??_MAX31855_ReadExtTemp+3
  3441  0609  3012               	movlw	18
  3442  060A                     u1345:	
  3443  060A  36A3               	lsrf	??_MAX31855_ReadExtTemp+3,f
  3444  060B  0CA2               	rrf	??_MAX31855_ReadExtTemp+2,f
  3445  060C  0CA1               	rrf	??_MAX31855_ReadExtTemp+1,f
  3446  060D  0CA0               	rrf	??_MAX31855_ReadExtTemp,f
  3447  060E  0B89               	decfsz	9,f
  3448  060F  2E0A               	goto	u1345
  3449  0610  30FF               	movlw	255
  3450  0611  0520               	andwf	??_MAX31855_ReadExtTemp,w
  3451  0612  00A4               	movwf	MAX31855_ReadExtTemp@value
  3452  0613  303F               	movlw	63
  3453  0614  0521               	andwf	??_MAX31855_ReadExtTemp+1,w
  3454  0615  00A5               	movwf	MAX31855_ReadExtTemp@value+1
  3455                           
  3456                           ;Max31855.c: 68: value /= 4 ;
  3457  0616  3004               	movlw	4
  3458  0617  00F0               	movwf	___awdiv@divisor
  3459  0618  3000               	movlw	0
  3460  0619  00F1               	movwf	___awdiv@divisor+1
  3461  061A  0825               	movf	MAX31855_ReadExtTemp@value+1,w
  3462  061B  00F3               	movwf	___awdiv@dividend+1
  3463  061C  0824               	movf	MAX31855_ReadExtTemp@value,w
  3464  061D  00F2               	movwf	___awdiv@dividend
  3465  061E                     L7:	
  3466  061E  3184  24B0         	fcall	___awdiv
  3467  0620  0871               	movf	?___awdiv+1,w
  3468  0621  0020               	movlb	0	; select bank0
  3469  0622  00A5               	movwf	MAX31855_ReadExtTemp@value+1
  3470  0623  0870               	movf	?___awdiv,w
  3471  0624  00A4               	movwf	MAX31855_ReadExtTemp@value
  3472                           
  3473                           ;Max31855.c: 69: }
  3474                           ;Max31855.c: 71: return (value);
  3475  0625  0825               	movf	MAX31855_ReadExtTemp@value+1,w
  3476  0626  00FD               	movwf	?_MAX31855_ReadExtTemp+1
  3477  0627  0824               	movf	MAX31855_ReadExtTemp@value,w
  3478  0628  00FC               	movwf	?_MAX31855_ReadExtTemp
  3479  0629  0008               	return
  3480  062A                     __end_of_MAX31855_ReadExtTemp:	
  3481                           
  3482                           	psect	text18
  3483  04B0                     __ptext18:	
  3484 ;; *************** function ___awdiv *****************
  3485 ;; Defined at:
  3486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  divisor         2    0[COMMON] int 
  3489 ;;  dividend        2    2[COMMON] int 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quotient        2    7[COMMON] int 
  3492 ;;  sign            1    6[COMMON] unsigned char 
  3493 ;;  counter         1    5[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  2    0[COMMON] int 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3503 ;;      Params:         4       0       0       0       0       0       0       0
  3504 ;;      Locals:         4       0       0       0       0       0       0       0
  3505 ;;      Temps:          1       0       0       0       0       0       0       0
  3506 ;;      Totals:         9       0       0       0       0       0       0       0
  3507 ;;Total ram usage:        9 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_MAX31855_ReadExtTemp
  3513 ;;		_MAX31855_ReadIntTemp
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function ___awdiv
  3519  04B0                     ___awdiv:	
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3523  04B0  01F6               	clrf	___awdiv@sign
  3524  04B1  1FF1               	btfss	___awdiv@divisor+1,7
  3525  04B2  2CBA               	goto	l1386
  3526  04B3  09F0               	comf	___awdiv@divisor,f
  3527  04B4  09F1               	comf	___awdiv@divisor+1,f
  3528  04B5  0AF0               	incf	___awdiv@divisor,f
  3529  04B6  1903               	skipnz
  3530  04B7  0AF1               	incf	___awdiv@divisor+1,f
  3531  04B8  01F6               	clrf	___awdiv@sign
  3532  04B9  0AF6               	incf	___awdiv@sign,f
  3533  04BA                     l1386:	
  3534  04BA  1FF3               	btfss	___awdiv@dividend+1,7
  3535  04BB  2CC5               	goto	l1392
  3536  04BC  09F2               	comf	___awdiv@dividend,f
  3537  04BD  09F3               	comf	___awdiv@dividend+1,f
  3538  04BE  0AF2               	incf	___awdiv@dividend,f
  3539  04BF  1903               	skipnz
  3540  04C0  0AF3               	incf	___awdiv@dividend+1,f
  3541  04C1  3001               	movlw	1
  3542  04C2  00F4               	movwf	??___awdiv
  3543  04C3  0874               	movf	??___awdiv,w
  3544  04C4  06F6               	xorwf	___awdiv@sign,f
  3545  04C5                     l1392:	
  3546  04C5  01F7               	clrf	___awdiv@quotient
  3547  04C6  01F8               	clrf	___awdiv@quotient+1
  3548  04C7  0870               	movf	___awdiv@divisor,w
  3549  04C8  0471               	iorwf	___awdiv@divisor+1,w
  3550  04C9  1903               	btfsc	3,2
  3551  04CA  2CF4               	goto	l1414
  3552  04CB  01F5               	clrf	___awdiv@counter
  3553  04CC  0AF5               	incf	___awdiv@counter,f
  3554  04CD                     l1402:	
  3555  04CD  1BF1               	btfsc	___awdiv@divisor+1,7
  3556  04CE  2CD9               	goto	l1404
  3557  04CF  3001               	movlw	1
  3558  04D0                     u895:	
  3559  04D0  35F0               	lslf	___awdiv@divisor,f
  3560  04D1  0DF1               	rlf	___awdiv@divisor+1,f
  3561  04D2  0B89               	decfsz	9,f
  3562  04D3  2CD0               	goto	u895
  3563  04D4  3001               	movlw	1
  3564  04D5  00F4               	movwf	??___awdiv
  3565  04D6  0874               	movf	??___awdiv,w
  3566  04D7  07F5               	addwf	___awdiv@counter,f
  3567  04D8  2CCD               	goto	l1402
  3568  04D9                     l1404:	
  3569  04D9  3001               	movlw	1
  3570  04DA                     u915:	
  3571  04DA  35F7               	lslf	___awdiv@quotient,f
  3572  04DB  0DF8               	rlf	___awdiv@quotient+1,f
  3573  04DC  0B89               	decfsz	9,f
  3574  04DD  2CDA               	goto	u915
  3575  04DE  0871               	movf	___awdiv@divisor+1,w
  3576  04DF  0273               	subwf	___awdiv@dividend+1,w
  3577  04E0  1D03               	skipz
  3578  04E1  2CE4               	goto	u925
  3579  04E2  0870               	movf	___awdiv@divisor,w
  3580  04E3  0272               	subwf	___awdiv@dividend,w
  3581  04E4                     u925:	
  3582  04E4  1C03               	skipc
  3583  04E5  2CEB               	goto	l1410
  3584  04E6  0870               	movf	___awdiv@divisor,w
  3585  04E7  02F2               	subwf	___awdiv@dividend,f
  3586  04E8  0871               	movf	___awdiv@divisor+1,w
  3587  04E9  3BF3               	subwfb	___awdiv@dividend+1,f
  3588  04EA  1477               	bsf	___awdiv@quotient,0
  3589  04EB                     l1410:	
  3590  04EB  3001               	movlw	1
  3591  04EC                     u935:	
  3592  04EC  36F1               	lsrf	___awdiv@divisor+1,f
  3593  04ED  0CF0               	rrf	___awdiv@divisor,f
  3594  04EE  0B89               	decfsz	9,f
  3595  04EF  2CEC               	goto	u935
  3596  04F0  3001               	movlw	1
  3597  04F1  02F5               	subwf	___awdiv@counter,f
  3598  04F2  1D03               	btfss	3,2
  3599  04F3  2CD9               	goto	l1404
  3600  04F4                     l1414:	
  3601  04F4  0876               	movf	___awdiv@sign,w
  3602  04F5  1903               	btfsc	3,2
  3603  04F6  2CFC               	goto	l1418
  3604  04F7  09F7               	comf	___awdiv@quotient,f
  3605  04F8  09F8               	comf	___awdiv@quotient+1,f
  3606  04F9  0AF7               	incf	___awdiv@quotient,f
  3607  04FA  1903               	skipnz
  3608  04FB  0AF8               	incf	___awdiv@quotient+1,f
  3609  04FC                     l1418:	
  3610  04FC  0878               	movf	___awdiv@quotient+1,w
  3611  04FD  00F1               	movwf	?___awdiv+1
  3612  04FE  0877               	movf	___awdiv@quotient,w
  3613  04FF  00F0               	movwf	?___awdiv
  3614  0500  0008               	return
  3615  0501                     __end_of___awdiv:	
  3616                           
  3617                           	psect	text19
  3618  0501                     __ptext19:	
  3619 ;; *************** function _MAX31855_ReadData *****************
  3620 ;; Defined at:
  3621 ;;		line 34 in file "Max31855.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  obj             1    wreg     PTR struct .
  3624 ;;		 -> Max31855_Data(8), 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  obj             1   11[COMMON] PTR struct .
  3627 ;;		 -> Max31855_Data(8), 
  3628 ;;  spival          4    5[COMMON] unsigned char [4]
  3629 ;;  i               1   10[COMMON] char 
  3630 ;;  DataW           1    9[COMMON] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3640 ;;      Params:         0       0       0       0       0       0       0       0
  3641 ;;      Locals:         7       0       0       0       0       0       0       0
  3642 ;;      Temps:          4       0       0       0       0       0       0       0
  3643 ;;      Totals:        11       0       0       0       0       0       0       0
  3644 ;;Total ram usage:       11 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    1
  3647 ;; This function calls:
  3648 ;;		_SPI_Exchange8bit
  3649 ;;		_wrapperpin
  3650 ;; This function is called by:
  3651 ;;		_MAX31855_ReadExtTemp
  3652 ;;		_MAX31855_ReadIntTemp
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _MAX31855_ReadData
  3658  0501                     _MAX31855_ReadData:	
  3659                           
  3660                           ;incstack = 0
  3661                           ; Regs used in _MAX31855_ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3662                           ;MAX31855_ReadData@obj stored from wreg
  3663  0501  00FB               	movwf	MAX31855_ReadData@obj
  3664                           
  3665                           ;Max31855.c: 35: uint8_t DataW = 0xff;
  3666  0502  30FF               	movlw	255
  3667  0503  00F1               	movwf	??_MAX31855_ReadData
  3668  0504  0871               	movf	??_MAX31855_ReadData,w
  3669  0505  00F9               	movwf	MAX31855_ReadData@DataW
  3670                           
  3671                           ;Max31855.c: 36: uint8_t spival[4];
  3672                           ;Max31855.c: 37: int8_t i;
  3673                           ;Max31855.c: 39: obj->TempDataRegFull =0x0000;
  3674  0506  087B               	movf	MAX31855_ReadData@obj,w
  3675  0507  0086               	movwf	6
  3676  0508  0187               	clrf	7
  3677  0509  3000               	movlw	0
  3678  050A  3FC0               	movwi [0]fsr1
  3679  050B  3FC1               	movwi [1]fsr1
  3680  050C  3FC2               	movwi [2]fsr1
  3681  050D  3FC3               	movwi [3]fsr1
  3682                           
  3683                           ;Max31855.c: 41: obj->SPI_CS_SS(0u);
  3684  050E  01F0               	clrf	wrapperpin@pin
  3685  050F  087B               	movf	MAX31855_ReadData@obj,w
  3686  0510  3E06               	addlw	6
  3687  0511  0086               	movwf	6
  3688  0512  0187               	clrf	7
  3689  0513  3F41               	moviw [1]fsr1
  3690  0514  008A               	movwf	10
  3691  0515  3F40               	moviw [0]fsr1
  3692  0516  000A               	callw
  3693  0517  3185               	pagesel	$
  3694                           
  3695                           ;Max31855.c: 44: for(i = 4 - 1 ; i >= 0 ; i--){
  3696  0518  3003               	movlw	3
  3697  0519  00F1               	movwf	??_MAX31855_ReadData
  3698  051A  0871               	movf	??_MAX31855_ReadData,w
  3699  051B  00FA               	movwf	MAX31855_ReadData@i
  3700  051C  1BFA               	btfsc	MAX31855_ReadData@i,7
  3701  051D  2D38               	goto	l1346
  3702  051E                     l1340:	
  3703                           
  3704                           ;Max31855.c: 45: spival[i] = obj->SPI_RW_Byte(DataW);
  3705  051E  0879               	movf	MAX31855_ReadData@DataW,w
  3706  051F  00F1               	movwf	??_MAX31855_ReadData
  3707  0520  0871               	movf	??_MAX31855_ReadData,w
  3708  0521  00F0               	movwf	SPI_Exchange8bit@data
  3709  0522  087B               	movf	MAX31855_ReadData@obj,w
  3710  0523  3E04               	addlw	4
  3711  0524  0086               	movwf	6
  3712  0525  0187               	clrf	7
  3713  0526  3F41               	moviw [1]fsr1
  3714  0527  008A               	movwf	10
  3715  0528  3F40               	moviw [0]fsr1
  3716  0529  000A               	callw
  3717  052A  3185               	pagesel	$
  3718  052B  00F2               	movwf	??_MAX31855_ReadData+1
  3719  052C  087A               	movf	MAX31855_ReadData@i,w
  3720  052D  3E75               	addlw	(low (MAX31855_ReadData@spival| 0))& (0+255)
  3721  052E  0086               	movwf	6
  3722  052F  0187               	clrf	7
  3723  0530  0872               	movf	??_MAX31855_ReadData+1,w
  3724  0531  0081               	movwf	1
  3725  0532  30FF               	movlw	255
  3726  0533  00F1               	movwf	??_MAX31855_ReadData
  3727  0534  0871               	movf	??_MAX31855_ReadData,w
  3728  0535  07FA               	addwf	MAX31855_ReadData@i,f
  3729  0536  1FFA               	btfss	MAX31855_ReadData@i,7
  3730  0537  2D1E               	goto	l1340
  3731  0538                     l1346:	
  3732                           
  3733                           ;Max31855.c: 46: }
  3734                           ;Max31855.c: 48: obj->SPI_CS_SS(1u);
  3735  0538  01F0               	clrf	wrapperpin@pin
  3736  0539  0AF0               	incf	wrapperpin@pin,f
  3737  053A  087B               	movf	MAX31855_ReadData@obj,w
  3738  053B  3E06               	addlw	6
  3739  053C  0086               	movwf	6
  3740  053D  0187               	clrf	7
  3741  053E  3F41               	moviw [1]fsr1
  3742  053F  008A               	movwf	10
  3743  0540  3F40               	moviw [0]fsr1
  3744  0541  000A               	callw
  3745  0542  3185               	pagesel	$
  3746                           
  3747                           ;Max31855.c: 49: obj->TempDataRegFull = *((uint32_t*)&spival[0]);
  3748  0543  3075               	movlw	low (MAX31855_ReadData@spival| 0)
  3749  0544  0086               	movwf	6
  3750  0545  0187               	clrf	7
  3751  0546  3F40               	moviw [0]fsr1
  3752  0547  00F1               	movwf	??_MAX31855_ReadData
  3753  0548  3F41               	moviw [1]fsr1
  3754  0549  00F2               	movwf	??_MAX31855_ReadData+1
  3755  054A  3F42               	moviw [2]fsr1
  3756  054B  00F3               	movwf	??_MAX31855_ReadData+2
  3757  054C  3F43               	moviw [3]fsr1
  3758  054D  00F4               	movwf	??_MAX31855_ReadData+3
  3759  054E  087B               	movf	MAX31855_ReadData@obj,w
  3760  054F  0086               	movwf	6
  3761  0550  0187               	clrf	7
  3762  0551  0871               	movf	??_MAX31855_ReadData,w
  3763  0552  3FC0               	movwi [0]fsr1
  3764  0553  0872               	movf	??_MAX31855_ReadData+1,w
  3765  0554  3FC1               	movwi [1]fsr1
  3766  0555  0873               	movf	??_MAX31855_ReadData+2,w
  3767  0556  3FC2               	movwi [2]fsr1
  3768  0557  0874               	movf	??_MAX31855_ReadData+3,w
  3769  0558  3FC3               	movwi [3]fsr1
  3770  0559  0008               	return
  3771  055A                     __end_of_MAX31855_ReadData:	
  3772                           
  3773                           	psect	text20
  3774  03BA                     __ptext20:	
  3775 ;; *************** function _wrapperpin *****************
  3776 ;; Defined at:
  3777 ;;		line 57 in file "main.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  pin             1    0[COMMON] unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3791 ;;      Params:         1       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0
  3794 ;;      Totals:         1       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        1 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;;		_MAX31855_ReadData
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function _wrapperpin
  3807  03BA                     _wrapperpin:	
  3808                           
  3809                           ;main.c: 58: if(pin) LATCbits.LATC0 =1;
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _wrapperpin: [wreg+status,2+status,0]
  3813  03BA  0870               	movf	wrapperpin@pin,w
  3814  03BB  1903               	btfsc	3,2
  3815  03BC  2BC0               	goto	l64
  3816  03BD  0022               	movlb	2	; select bank2
  3817  03BE  140E               	bsf	14,0	;volatile
  3818  03BF  0008               	return
  3819  03C0                     l64:	
  3820                           
  3821                           ;main.c: 59: else LATCbits.LATC0 =0;
  3822  03C0  0022               	movlb	2	; select bank2
  3823  03C1  100E               	bcf	14,0	;volatile
  3824  03C2  0008               	return
  3825  03C3                     __end_of_wrapperpin:	
  3826                           
  3827                           	psect	text21
  3828  03AA                     __ptext21:	
  3829 ;; *************** function _SPI_Exchange8bit *****************
  3830 ;; Defined at:
  3831 ;;		line 79 in file "mcc_generated_files/spi.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  data            1    0[COMMON] unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      unsigned char 
  3838 ;; Registers used:
  3839 ;;		wreg
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3845 ;;      Params:         1       0       0       0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0
  3848 ;;      Totals:         1       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;;		_SPI_Exchange8bitBuffer
  3856 ;;		_MAX31855_ReadData
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _SPI_Exchange8bit
  3862  03AA                     _SPI_Exchange8bit:	
  3863                           
  3864                           ;spi.c: 82: SSPCON1bits.WCOL = 0;
  3865                           
  3866                           ;incstack = 0
  3867                           ; Regs used in _SPI_Exchange8bit: [wreg]
  3868  03AA  0024               	movlb	4	; select bank4
  3869  03AB  1395               	bcf	21,7	;volatile
  3870                           
  3871                           ;spi.c: 84: SSPBUF = data;
  3872  03AC  0870               	movf	SPI_Exchange8bit@data,w
  3873  03AD  0091               	movwf	17	;volatile
  3874  03AE                     l18:	
  3875                           ;spi.c: 87: {
  3876                           
  3877                           ;spi.c: 86: while(SSPSTATbits.BF == 0x0)
  3878                           
  3879  03AE  1C14               	btfss	20,0	;volatile
  3880  03AF  2BAE               	goto	l18
  3881                           
  3882                           ;spi.c: 88: }
  3883                           ;spi.c: 90: return (SSPBUF);
  3884  03B0  0811               	movf	17,w	;volatile
  3885  03B1  0008               	return
  3886  03B2                     __end_of_SPI_Exchange8bit:	
  3887                           
  3888                           	psect	text22
  3889  03E0                     __ptext22:	
  3890 ;; *************** function _MAX31855_Init *****************
  3891 ;; Defined at:
  3892 ;;		line 23 in file "Max31855.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  obj             1    wreg     PTR struct .
  3895 ;;		 -> Max31855_Data(8), 
  3896 ;;  SPI_Transfer    2    0[COMMON] PTR FTN(unsigned char ,)
  3897 ;;		 -> SPI_Exchange8bit(1), 
  3898 ;;  SPI_cs_ss       2    2[COMMON] PTR FTN(unsigned char ,)
  3899 ;;		 -> wrapperpin(1), 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  obj             1    4[COMMON] PTR struct .
  3902 ;;		 -> Max31855_Data(8), 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3912 ;;      Params:         4       0       0       0       0       0       0       0
  3913 ;;      Locals:         1       0       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0
  3915 ;;      Totals:         5       0       0       0       0       0       0       0
  3916 ;;Total ram usage:        5 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _MAX31855_Init
  3927  03E0                     _MAX31855_Init:	
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _MAX31855_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
  3931                           ;MAX31855_Init@obj stored from wreg
  3932  03E0  00F4               	movwf	MAX31855_Init@obj
  3933                           
  3934                           ;Max31855.c: 24: obj->SPI_RW_Byte = SPI_TransferByte;
  3935  03E1  0874               	movf	MAX31855_Init@obj,w
  3936  03E2  3E04               	addlw	4
  3937  03E3  0086               	movwf	6
  3938  03E4  0187               	clrf	7
  3939  03E5  0870               	movf	MAX31855_Init@SPI_TransferByte,w
  3940  03E6  3FC0               	movwi [0]fsr1
  3941  03E7  0871               	movf	MAX31855_Init@SPI_TransferByte+1,w
  3942  03E8  3FC1               	movwi [1]fsr1
  3943                           
  3944                           ;Max31855.c: 25: obj->SPI_CS_SS = SPI_cs_ss;
  3945  03E9  0874               	movf	MAX31855_Init@obj,w
  3946  03EA  3E06               	addlw	6
  3947  03EB  0086               	movwf	6
  3948  03EC  0187               	clrf	7
  3949  03ED  0872               	movf	MAX31855_Init@SPI_cs_ss,w
  3950  03EE  3FC0               	movwi [0]fsr1
  3951  03EF  0873               	movf	MAX31855_Init@SPI_cs_ss+1,w
  3952  03F0  3FC1               	movwi [1]fsr1
  3953  03F1  0008               	return
  3954  03F2                     __end_of_MAX31855_Init:	
  3955  007E                     btemp	set	126	;btemp
  3956  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    18
    Data        0
    BSS         13
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[6]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    MAX31855_ReadIntTemp@obj.SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    MAX31855_ReadIntTemp@obj.SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    MAX31855_ReadExtTemp@obj.SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    MAX31855_ReadExtTemp@obj.SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    MAX31855_ReadExtTemp@obj	PTR struct . size(1) Largest target is 8
		 -> Max31855_Data(BANK0[8]), 

    MAX31855_ReadData@obj.SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    MAX31855_ReadData@obj.SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    MAX31855_ReadData@obj	PTR struct . size(1) Largest target is 8
		 -> Max31855_Data(BANK0[8]), 

    MAX31855_Init@SPI_cs_ss	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    MAX31855_Init@obj.SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    MAX31855_Init@obj.SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    MAX31855_Init@SPI_TransferByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    MAX31855_Init@obj	PTR struct . size(1) Largest target is 8
		 -> Max31855_Data(BANK0[8]), 

    S129$SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    Max31855_Data.SPI_CS_SS	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> wrapperpin(), 

    S129$SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 

    Max31855_Data.SPI_RW_Byte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_Exchange8bit(), 


Critical Paths under _main in COMMON

    _main->_MAX31855_ReadExtTemp
    _printf->_MAX31855_ReadExtTemp
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MAX31855_ReadExtTemp->_MAX31855_ReadData
    _MAX31855_ReadData->_SPI_Exchange8bit
    _MAX31855_ReadData->_wrapperpin

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_MAX31855_ReadExtTemp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4733
                                             26 BANK0      4     4      0
                      _MAX31855_Init
               _MAX31855_ReadExtTemp
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    21      6    2358
                                              7 BANK0     19    13      6
               _MAX31855_ReadExtTemp (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MAX31855_ReadExtTemp                                 9     7      2    1808
                                             12 COMMON     2     0      2
                                              0 BANK0      7     7      0
                  _MAX31855_ReadData
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _MAX31855_ReadData                                   11    11      0     709
                                              1 COMMON    11    11      0
                   _SPI_Exchange8bit *
                         _wrapperpin *
 ---------------------------------------------------------------------------------
 (3) _wrapperpin                                           1     0      1     128
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     0      1     267
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MAX31855_Init                                        5     1      4     273
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX31855_Init
   _MAX31855_ReadExtTemp
     _MAX31855_ReadData
       _SPI_Exchange8bit *
       _wrapperpin *
     ___awdiv
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _WDT_Initialize
   _printf
     _MAX31855_ReadExtTemp (ARG)
       _MAX31855_ReadData
         _SPI_Exchange8bit *
         _wrapperpin *
       ___awdiv
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)
     _putch (ARG)
       _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      3F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Oct 17 19:38:16 2019

                               _SPI_Initialize 03A3                                    __CFG_CP$OFF 0000  
                                  _SSPSTATbits 0214                                             l18 03AE  
                                           l64 03C0                                   ___awdiv@sign 0076  
                          ___wmul@multiplicand 0072                                    __CFG_LVP$ON 0000  
                                          l230 03B3                                            l302 0703  
                                          l306 073A                                            l411 03FA  
                                          l327 07F5                                            l291 069A  
                                          l277 0650                                            l297 06E1  
                                          l289 06BB                                   __CFG_CPD$OFF 0000  
                                          u915 04DA                                            u835 03FB  
                                          u925 04E4                                            u845 0400  
                                          u935 04EC                                            u895 04D0  
                                          u975 0487                                            u995 0491  
               ?_EUSART_SetFramingErrorHandler 0070                                   __CFG_BORV$LO 0000  
                                          wreg 0009                                   __CFG_IESO$ON 0000  
                                         l1410 04EB                                           l1402 04CD  
                                         l1340 051E                                           l1404 04D9  
                                         l1414 04F4                                           l1502 069D  
                                         l1600 05FE                                           l1440 04A2  
                                         l1432 0484                                           l1360 03CF  
                                         l1346 0538                                           l1418 04FC  
                                         l1434 0490                                           l1514 06D5  
                                         l1444 04AB                                           l1540 0725  
                                         l1462 046E                                           l1366 03F4  
                                         l1550 0756                                           l1542 072E  
                                         l1392 04C5                                           l1456 0456  
                                         l1552 0759                                           l1480 064B  
                                         l1386 04BA                                           l1458 0462  
                                         l1466 0477                                           l1570 0783  
                                         l1564 0772                                           l1492 066B  
                                         l1652 0569                                           l1566 0776  
                                         l1574 078B                                           l1558 0763  
                                         l1486 0655                                           l1590 062F  
                                         l1576 0791                                           l1488 065E  
                                         l1578 07B8                                           l1586 07DF  
                                         l1588 07E3                                           STR_1 0834  
                                         STR_2 082E                                           STR_3 0811  
                                         STR_4 0800                                           u1005 049B  
                                         u1015 04A3                                           u1045 0459  
                                         u1065 0468                                           u1225 0749  
                                         u1075 046F                                           u1155 06FC  
                                         _LATA 010C                                           _LATB 010D  
                                         u1335 05DB                                           _LATC 010E  
                                         _LATD 010F                                           u1345 060A  
                                         u1185 071E                                           _LATE 0110  
                                         u1435 0577                                           u1477 05B3  
                                         _WPUB 020D                                           _WPUE 0210  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                                         _main 055A                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 0002  
                       __end_of_SPI_Initialize 03AA                                  __CFG_MCLRE$ON 0000  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 03A3                                          ?_main 0070  
                              __end_of___awdiv 0501                                  __CFG_WDTE$OFF 0000  
                              ___awdiv@divisor 0070                                __end_of___lwdiv 04B0  
                              __end_of___lwmod 047C                                ___awdiv@counter 0075  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISD 008F  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                                __end_of_dpowers 0826  
                               _WDT_Initialize 037B                                __end_of_isdigit 03D1  
                                        _putch 037F                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              ?_SPI_Initialize 0070                                __initialization 07F6  
                                 __end_of_main 05BB                                 ??_EUSART_Write 0070  
                                       ??_main 003A                                 __CFG_PLLEN$OFF 0000  
                       __end_of_WDT_Initialize 037F                       __end_of_SPI_Exchange8bit 03B2  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 004D  
                             ___awdiv@dividend 0072                                         _APFCON 011D  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELD 018F  
                                       _ANSELE 0190                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                        __end_of_MAX31855_Init 03F2                                 __CFG_PWRTE$OFF 0000  
                      MAX31855_ReadExtTemp@obj 0026                                         ___wmul 03F2  
                                    ??___awdiv 0074                                 __CFG_STVREN$ON 0000  
                                    ??___lwdiv 0074                                      ??___lwmod 007C  
                             ___awdiv@quotient 0077                                         _printf 062A  
                                    ??_isdigit 0070                                ?_WDT_Initialize 0070  
                       MAX31855_Init@SPI_cs_ss 0072                   __end_of_MAX31855_ReadExtTemp 062A  
                            _SYSTEM_Initialize 03D1                        __end_of__initialization 07FD  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                  __end_of_putch 0384  
                                _Max31855_Data 0043                                 _OPTION_REGbits 0095  
                MAX31855_Init@SPI_TransferByte 0070                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 03E0                                        ??_putch 0071  
                                   __pbssBANK0 003E                           __end_of_EUSART_Write 03BA  
                              __CFG_VCAPEN$OFF 0000                                     __pmaintext 055A  
                                      ?___wmul 0070                                        _BAUDCON 019F  
                                      ?_printf 0027                                        _OSCTUNE 0098  
                         MAX31855_ReadData@obj 007B                       ??_EUSART_SetErrorHandler 0072  
                                      _SSPCON1 0215                                        _SSPSTAT 0214  
                             ??_SPI_Initialize 0070                                        _ReadSpi 003E  
                    MAX31855_ReadExtTemp@value 0024                                        ___awdiv 04B0  
                              __size_of___wmul 001B                                        ___lwdiv 047C  
                                      ___lwmod 0450                           _MAX31855_ReadExtTemp 05BB  
                                      __ptext1 062A                                        __ptext2 037F  
                                      __ptext3 03B2                                        __ptext4 03C3  
                                      __ptext5 03F2                                        __ptext6 0450  
                                      __ptext7 047C                                        __ptext8 03D1  
                                      __ptext9 037B                                __size_of_printf 01CC  
                            __end_of_hexpowers 082E                                        _dpowers 081C  
                        _OSCILLATOR_Initialize 039C                                        _isdigit 03C3  
                     ??_PIN_MANAGER_Initialize 0070                              ?_SPI_Exchange8bit 0070  
                   __size_of_SYSTEM_Initialize 000F                                        clrloop0 0397  
                         end_of_initialization 07FD                             ??_SPI_Exchange8bit 0071  
                         SPI_Exchange8bit@data 0070          __end_of_EUSART_SetOverrunErrorHandler 0396  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0390  
                            _EUSART_Initialize 040D                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                        printf@c 0039  
                                      printf@f 0027                          ?_MAX31855_ReadExtTemp 007C  
                       MAX31855_ReadData@DataW 0079                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                               __CFG_FOSC$INTOSC 0000  
                        __size_of_EUSART_Write 0008                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 042E                                    printf@width 0037  
                                    _TXSTAbits 019E                                     _wrapperpin 03BA  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 040D  
                                 _EUSART_Write 03B2                              _MAX31855_ReadData 0501  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 07F6  
                           ?_MAX31855_ReadData 0070                         __size_of_MAX31855_Init 0012  
                          start_initialization 07F6                __size_of_PIN_MANAGER_Initialize 0022  
                          ??_MAX31855_ReadData 0071                                    putch@txData 0071  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 004F  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 0384  
                       ??_MAX31855_ReadExtTemp 0020                      __end_of_MAX31855_ReadData 055A  
                                     ??_printf 002D                                      ___latbits 0002  
                                __pcstackBANK0 0020                     __size_of_EUSART_Initialize 0021  
                                    __pnvBANK0 004B                                  _MAX31855_Init 03E0  
                             ___lwdiv@dividend 0072                         _PIN_MANAGER_Initialize 042E  
                                  ?_wrapperpin 0070                                       ?___awdiv 0070  
                                     ?___lwdiv 0070                                       ?___lwmod 0078  
                                     ?_isdigit 0070                                      _hexpowers 0826  
                             ___lwdiv@quotient 0075                               MAX31855_Init@obj 0074  
                               __size_of_putch 0005                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATCbits 010E  
                               ?_MAX31855_Init 0070                                      clear_ram0 0396  
                            _eusartRxLastError 0042                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                      __size_of_SPI_Exchange8bit 0008  
            _EUSART_DefaultOverrunErrorHandler 0000                     __size_of_MAX31855_ReadData 0059  
                            ___wmul@multiplier 0070                                     printf@flag 0036  
                                   printf@prec 0033                            __size_of_wrapperpin 0009  
                      __size_of_SPI_Initialize 0007                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 004B                               __size_of___awdiv 0051  
                             __size_of___lwdiv 0034                               __size_of___lwmod 002C  
                                  _isdigit$796 0070                               __size_of_isdigit 000E  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 03A3                                       __ptext11 042E  
                                     __ptext20 03BA                                       __ptext12 039C  
                                     __ptext21 03AA                                       __ptext13 040D  
                                     __ptext22 03E0                                       __ptext14 0390  
                                     __ptext15 038A                                       __ptext16 0384  
                                     __ptext17 05BB                                       __ptext18 04B0  
                                     __ptext19 0501                             MAX31855_ReadData@i 007A  
                              ??_MAX31855_Init 0074                                  __size_of_main 0061  
                                wrapperpin@pin 0070                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                      printf@idx 0031  
        __end_of_EUSART_SetFramingErrorHandler 0390         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 038A                                      printf@val 0034  
                                     isdigit@c 0071                        __size_of_WDT_Initialize 0004  
                             ___lwmod@dividend 007A                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 038A                              __CFG_CLKOUTEN$OFF 0000  
                             _SPI_Exchange8bit 03AA                                   ??_wrapperpin 0071  
                                     printf@ap 0032  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                __size_of_MAX31855_ReadExtTemp 006F                                  __pstringtext1 081C  
                                __pstringtext2 0826                                  __pstringtext3 0800  
                                __pstringtext4 0811                                  __pstringtext5 082E  
                                __pstringtext6 0834                                  __pstringtext7 0000  
                              ___lwmod@divisor 0078                                ___lwmod@counter 007D  
                                  _SSPCON1bits 0215                             EUSART_Write@txData 0070  
                           __end_of_wrapperpin 03C3                 __end_of_PIN_MANAGER_Initialize 0450  
                      MAX31855_ReadData@spival 0075  
